"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx":
/*!***************************************************!*\
  !*** ./components/algorithms/GraphAlgorithms.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GraphAlgorithms; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AlgorithmSelector */ \"(app-pages-browser)/./components/AlgorithmSelector.tsx\");\n/* harmony import */ var _GraphVisualization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../GraphVisualization */ \"(app-pages-browser)/./components/GraphVisualization.tsx\");\n/* harmony import */ var _CodeDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CodeDisplay */ \"(app-pages-browser)/./components/CodeDisplay.tsx\");\n/* harmony import */ var _ControlPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ControlPanel */ \"(app-pages-browser)/./components/ControlPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction GraphAlgorithms() {\n    var _algorithms_find;\n    _s();\n    const [selectedAlgorithm, setSelectedAlgorithm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"dfs\");\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isPlayingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"A\",\n            x: 150,\n            y: 100,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"B\",\n            x: 100,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"C\",\n            x: 200,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"D\",\n            x: 50,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"E\",\n            x: 150,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"F\",\n            x: 250,\n            y: 300,\n            visited: false,\n            current: false\n        }\n    ]);\n    const [edges] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            from: \"A\",\n            to: \"B\",\n            weight: 2\n        },\n        {\n            from: \"A\",\n            to: \"C\",\n            weight: 1\n        },\n        {\n            from: \"B\",\n            to: \"D\",\n            weight: 3\n        },\n        {\n            from: \"B\",\n            to: \"E\",\n            weight: 1\n        },\n        {\n            from: \"C\",\n            to: \"E\",\n            weight: 4\n        },\n        {\n            from: \"C\",\n            to: \"F\",\n            weight: 8\n        },\n        {\n            from: \"E\",\n            to: \"F\",\n            weight: 2\n        }\n    ]);\n    const algorithms = [\n        {\n            id: \"dfs\",\n            name: \"Depth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"bfs\",\n            name: \"Breadth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"dijkstra\",\n            name: \"Dijkstra's Algorithm\",\n            complexity: \"O((V + E) log V)\"\n        }\n    ];\n    const dfsCode = \"function dfs(graph, startNode, visited = new Set()) {\\n  console.log(startNode); // Process current node\\n  visited.add(startNode);\\n  \\n  // Visit all unvisited neighbors\\n  for (const neighbor of graph[startNode]) {\\n    if (!visited.has(neighbor)) {\\n      dfs(graph, neighbor, visited);\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\ndfs(graph, 'A');\";\n    const bfsCode = \"function bfs(graph, startNode) {\\n  const visited = new Set();\\n  const queue = [startNode];\\n  \\n  visited.add(startNode);\\n  \\n  while (queue.length > 0) {\\n    const currentNode = queue.shift();\\n    console.log(currentNode); // Process current node\\n    \\n    // Add all unvisited neighbors to queue\\n    for (const neighbor of graph[currentNode]) {\\n      if (!visited.has(neighbor)) {\\n        visited.add(neighbor);\\n        queue.push(neighbor);\\n      }\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\nbfs(graph, 'A');\";\n    const dijkstraCode = \"function dijkstra(graph, start) {\\n  const distances = {};\\n  const prev = {};\\n  const pq = [];\\n  for (const node in graph) {\\n    distances[node] = Infinity;\\n    prev[node] = null;\\n  }\\n  distances[start] = 0;\\n  pq.push({ node: start, dist: 0 });\\n  while (pq.length > 0) {\\n    pq.sort((a, b) => a.dist - b.dist);\\n    const { node: current } = pq.shift();\\n    for (const neighbor of graph[current]) {\\n      const { to, weight } = neighbor;\\n      if (distances[current] + weight < distances[to]) {\\n        distances[to] = distances[current] + weight;\\n        prev[to] = current;\\n        pq.push({ node: to, dist: distances[to] });\\n      }\\n    }\\n  }\\n  return { distances, prev };\\n}\\n// Usage\\nconst graph = {\\n  'A': [{ to: 'B', weight: 2 }, { to: 'C', weight: 1 }],\\n  'B': [{ to: 'A', weight: 2 }, { to: 'D', weight: 3 }, { to: 'E', weight: 1 }],\\n  'C': [{ to: 'A', weight: 1 }, { to: 'E', weight: 4 }, { to: 'F', weight: 8 }],\\n  'D': [{ to: 'B', weight: 3 }],\\n  'E': [{ to: 'B', weight: 1 }, { to: 'C', weight: 4 }, { to: 'F', weight: 2 }],\\n  'F': [{ to: 'C', weight: 8 }, { to: 'E', weight: 2 }]\\n};\\ndijkstra(graph, 'A');\";\n    const getAlgorithmCode = ()=>{\n        switch(selectedAlgorithm){\n            case \"dfs\":\n                return dfsCode;\n            case \"bfs\":\n                return bfsCode;\n            case \"dijkstra\":\n                return dijkstraCode;\n            default:\n                return dfsCode;\n        }\n    };\n    const getAdjacencyList = ()=>{\n        const adjacencyList = {};\n        nodes.forEach((node)=>{\n            adjacencyList[node.id] = [];\n        });\n        edges.forEach((edge)=>{\n            adjacencyList[edge.from].push({\n                to: edge.to,\n                weight: edge.weight\n            });\n            adjacencyList[edge.to].push({\n                to: edge.from,\n                weight: edge.weight\n            });\n        });\n        return adjacencyList;\n    };\n    const sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n    const reset = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n        setNodes(nodes.map((node)=>({\n                ...node,\n                visited: false,\n                current: false\n            })));\n    };\n    const dfsTraversal = async (nodeId, visited, adjacencyList)=>{\n        if (!isPlayingRef.current || visited.has(nodeId)) return;\n        visited.add(nodeId);\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: node.id === nodeId,\n                    visited: visited.has(node.id)\n                })));\n        await sleep(1500);\n        if (!isPlayingRef.current) return;\n        for (const neighbor of adjacencyList[nodeId]){\n            if (!visited.has(neighbor) && isPlayingRef.current) {\n                await dfsTraversal(neighbor, visited, adjacencyList);\n            }\n        }\n        if (isPlayingRef.current) {\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: false\n                    })));\n        }\n    };\n    const bfsTraversal = async ()=>{\n        const visited = new Set();\n        const queue = [\n            \"A\"\n        ];\n        visited.add(\"A\");\n        while(queue.length > 0 && isPlayingRef.current){\n            const currentNode = queue.shift();\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: node.id === currentNode,\n                        visited: visited.has(node.id)\n                    })));\n            await sleep(1500);\n            if (!isPlayingRef.current) break;\n            const adjacencyList = getAdjacencyList();\n            for (const neighbor of adjacencyList[currentNode]){\n                if (!visited.has(neighbor)) {\n                    visited.add(neighbor);\n                    queue.push(neighbor);\n                }\n            }\n        }\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: false\n                })));\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    // Dijkstra visualization logic\n    const dijkstraTraversal = async ()=>{\n        const adjacencyList = getAdjacencyList();\n        const distances = {};\n        const prev = {};\n        const visited = new Set();\n        const pq = [];\n        nodes.forEach((node)=>{\n            distances[node.id] = Infinity;\n            prev[node.id] = null;\n        });\n        distances[\"A\"] = 0;\n        pq.push({\n            node: \"A\",\n            dist: 0\n        });\n        while(pq.length > 0 && isPlayingRef.current){\n            pq.sort((a, b)=>a.dist - b.dist);\n            const { node: current } = pq.shift();\n            if (visited.has(current)) continue;\n            visited.add(current);\n            setNodes((prevNodes)=>prevNodes.map((n)=>({\n                        ...n,\n                        current: n.id === current,\n                        visited: visited.has(n.id)\n                    })));\n            await sleep(1200);\n            for (const neighbor of adjacencyList[current]){\n                const { to, weight } = neighbor;\n                if (distances[current] + weight < distances[to]) {\n                    distances[to] = distances[current] + weight;\n                    prev[to] = current;\n                    pq.push({\n                        node: to,\n                        dist: distances[to]\n                    });\n                }\n            }\n        }\n        // Highlight shortest path from A to F (as example)\n        let path = [];\n        let curr = \"F\";\n        while(curr && prev[curr]){\n            path.unshift([\n                prev[curr],\n                curr\n            ]);\n            curr = prev[curr];\n        }\n        setNodes((prevNodes)=>prevNodes.map((n)=>({\n                    ...n,\n                    current: false,\n                    visited: visited.has(n.id) || n.id === \"A\" || n.id === \"F\"\n                })));\n        // Optionally, you can highlight edges in the path\n        // ...\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const play = async ()=>{\n        if (isPlaying) return;\n        setIsPlaying(true);\n        isPlayingRef.current = true;\n        reset();\n        await sleep(100);\n        isPlayingRef.current = true;\n        if (selectedAlgorithm === \"dfs\") {\n            const adjacencyList = getAdjacencyList();\n            await dfsTraversal(\"A\", new Set(), adjacencyList);\n        } else if (selectedAlgorithm === \"bfs\") {\n            await bfsTraversal();\n        } else if (selectedAlgorithm === \"dijkstra\") {\n            await dijkstraTraversal();\n        }\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const pause = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        reset();\n    }, [\n        selectedAlgorithm\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        isPlayingRef.current = isPlaying;\n    }, [\n        isPlaying\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                algorithms: algorithms,\n                selectedAlgorithm: selectedAlgorithm,\n                setSelectedAlgorithm: setSelectedAlgorithm\n            }, void 0, false, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 339,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid lg:grid-cols-2 gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GraphVisualization__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                nodes: nodes,\n                                edges: edges\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 347,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ControlPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                isPlaying: isPlaying,\n                                onPlay: play,\n                                onPause: pause,\n                                onReset: reset,\n                                hideGenerateArray: true\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 352,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 346,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CodeDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        code: getAlgorithmCode(),\n                        language: \"javascript\",\n                        title: ((_algorithms_find = algorithms.find((a)=>a.id === selectedAlgorithm)) === null || _algorithms_find === void 0 ? void 0 : _algorithms_find.name) || \"\"\n                    }, void 0, false, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 361,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 345,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n        lineNumber: 338,\n        columnNumber: 5\n    }, this);\n}\n_s(GraphAlgorithms, \"UNkwqihGc4BA6IzUp9HZPo/Cfow=\");\n_c = GraphAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"GraphAlgorithms\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvYWxnb3JpdGhtcy9HcmFwaEFsZ29yaXRobXMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFHb0Q7QUFDQztBQUNFO0FBQ2Q7QUFDRTtBQWdCNUIsU0FBU087UUFvVlBDOztJQW5WZixNQUFNLENBQUNDLG1CQUFtQkMscUJBQXFCLEdBQUdWLCtDQUFRQSxDQUFDO0lBQzNELE1BQU0sQ0FBQ1csV0FBV0MsYUFBYSxHQUFHWiwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNYSxlQUFlWCw2Q0FBTUEsQ0FBQztJQUM1QixNQUFNLENBQUNZLE9BQU9DLFNBQVMsR0FBR2YsK0NBQVFBLENBQVM7UUFDekM7WUFBRWdCLElBQUk7WUFBS0MsR0FBRztZQUFLQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO1FBQzFEO1lBQUVKLElBQUk7WUFBS0MsR0FBRztZQUFLQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO1FBQzFEO1lBQUVKLElBQUk7WUFBS0MsR0FBRztZQUFLQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO1FBQzFEO1lBQUVKLElBQUk7WUFBS0MsR0FBRztZQUFJQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO1FBQ3pEO1lBQUVKLElBQUk7WUFBS0MsR0FBRztZQUFLQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO1FBQzFEO1lBQUVKLElBQUk7WUFBS0MsR0FBRztZQUFLQyxHQUFHO1lBQUtDLFNBQVM7WUFBT0MsU0FBUztRQUFNO0tBQzNEO0lBRUQsTUFBTSxDQUFDQyxNQUFNLEdBQUdyQiwrQ0FBUUEsQ0FBUztRQUMvQjtZQUFFc0IsTUFBTTtZQUFLQyxJQUFJO1lBQUtDLFFBQVE7UUFBRTtRQUNoQztZQUFFRixNQUFNO1lBQUtDLElBQUk7WUFBS0MsUUFBUTtRQUFFO1FBQ2hDO1lBQUVGLE1BQU07WUFBS0MsSUFBSTtZQUFLQyxRQUFR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bUJBQW1CQTtnQkFDbkJDLHNCQUFzQkE7Ozs7OzswQkFHeEIsOERBQUM2RDtnQkFBSUMsV0FBVTs7a0NBQ2IsOERBQUNEO3dCQUFJQyxXQUFVOzswQ0FDYiw4REFBQ3BFLDJEQUFrQkE7Z0NBQ2pCVSxPQUFPQTtnQ0FDUE8sT0FBT0E7Ozs7OzswQ0FHVCw4REFBQ2YscURBQVlBO2dDQUNYSyxXQUFXQTtnQ0FDWDhELFFBQVFKO2dDQUNSSyxTQUFTSjtnQ0FDVEssU0FBU2pDO2dDQUNUa0MsbUJBQW1COzs7Ozs7Ozs7Ozs7a0NBSXZCLDhEQUFDdkUsb0RBQVdBO3dCQUNWd0UsTUFBTS9DO3dCQUNOZ0QsVUFBUzt3QkFDVEMsT0FBT3ZFLEVBQUFBLG1CQUFBQSxXQUFXd0UsSUFBSSxDQUFDbEIsQ0FBQUEsSUFBS0EsRUFBRTlDLEVBQUUsS0FBS1AsZ0NBQTlCRCx1Q0FBQUEsaUJBQWtEaUIsSUFBSSxLQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLM0U7R0F6VndCbEI7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9hbGdvcml0aG1zL0dyYXBoQWxnb3JpdGhtcy50c3g/NGQ1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2UgY2xpZW50JztcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFsZ29yaXRobVNlbGVjdG9yIGZyb20gJy4uL0FsZ29yaXRobVNlbGVjdG9yJztcbmltcG9ydCBHcmFwaFZpc3VhbGl6YXRpb24gZnJvbSAnLi4vR3JhcGhWaXN1YWxpemF0aW9uJztcbmltcG9ydCBDb2RlRGlzcGxheSBmcm9tICcuLi9Db2RlRGlzcGxheSc7XG5pbXBvcnQgQ29udHJvbFBhbmVsIGZyb20gJy4uL0NvbnRyb2xQYW5lbCc7XG5cbmludGVyZmFjZSBOb2RlIHtcbiAgaWQ6IHN0cmluZztcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIHZpc2l0ZWQ6IGJvb2xlYW47XG4gIGN1cnJlbnQ6IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBFZGdlIHtcbiAgZnJvbTogc3RyaW5nO1xuICB0bzogc3RyaW5nO1xuICB3ZWlnaHQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JhcGhBbGdvcml0aG1zKCkge1xuICBjb25zdCBbc2VsZWN0ZWRBbGdvcml0aG0sIHNldFNlbGVjdGVkQWxnb3JpdGhtXSA9IHVzZVN0YXRlKCdkZnMnKTtcbiAgY29uc3QgW2lzUGxheWluZywgc2V0SXNQbGF5aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgaXNQbGF5aW5nUmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgY29uc3QgW25vZGVzLCBzZXROb2Rlc10gPSB1c2VTdGF0ZTxOb2RlW10+KFtcbiAgICB7IGlkOiAnQScsIHg6IDE1MCwgeTogMTAwLCB2aXNpdGVkOiBmYWxzZSwgY3VycmVudDogZmFsc2UgfSxcbiAgICB7IGlkOiAnQicsIHg6IDEwMCwgeTogMjAwLCB2aXNpdGVkOiBmYWxzZSwgY3VycmVudDogZmFsc2UgfSxcbiAgICB7IGlkOiAnQycsIHg6IDIwMCwgeTogMjAwLCB2aXNpdGVkOiBmYWxzZSwgY3VycmVudDogZmFsc2UgfSxcbiAgICB7IGlkOiAnRCcsIHg6IDUwLCB5OiAzMDAsIHZpc2l0ZWQ6IGZhbHNlLCBjdXJyZW50OiBmYWxzZSB9LFxuICAgIHsgaWQ6ICdFJywgeDogMTUwLCB5OiAzMDAsIHZpc2l0ZWQ6IGZhbHNlLCBjdXJyZW50OiBmYWxzZSB9LFxuICAgIHsgaWQ6ICdGJywgeDogMjUwLCB5OiAzMDAsIHZpc2l0ZWQ6IGZhbHNlLCBjdXJyZW50OiBmYWxzZSB9XG4gIF0pO1xuICBcbiAgY29uc3QgW2VkZ2VzXSA9IHVzZVN0YXRlPEVkZ2VbXT4oW1xuICAgIHsgZnJvbTogJ0EnLCB0bzogJ0InLCB3ZWlnaHQ6IDIgfSxcbiAgICB7IGZyb206ICdBJywgdG86ICdDJywgd2VpZ2h0OiAxIH0sXG4gICAgeyBmcm9tOiAnQicsIHRvOiAnRCcsIHdlaWdodDogMyB9LFxuICAgIHsgZnJvbTogJ0InLCB0bzogJ0UnLCB3ZWlnaHQ6IDEgfSxcbiAgICB7IGZyb206ICdDJywgdG86ICdFJywgd2VpZ2h0OiA0IH0sXG4gICAgeyBmcm9tOiAnQycsIHRvOiAnRicsIHdlaWdodDogOCB9LFxuICAgIHsgZnJvbTogJ0UnLCB0bzogJ0YnLCB3ZWlnaHQ6IDIgfVxuICBdKTtcblxuICBjb25zdCBhbGdvcml0aG1zID0gW1xuICAgIHsgaWQ6ICdkZnMnLCBuYW1lOiAnRGVwdGgtRmlyc3QgU2VhcmNoJywgY29tcGxleGl0eTogJ08oViArIEUpJyB9LFxuICAgIHsgaWQ6ICdiZnMnLCBuYW1lOiAnQnJlYWR0aC1GaXJzdCBTZWFyY2gnLCBjb21wbGV4aXR5OiAnTyhWICsgRSknIH0sXG4gICAgeyBpZDogJ2RpamtzdHJhJywgbmFtZTogXCJEaWprc3RyYSdzIEFsZ29yaXRobVwiLCBjb21wbGV4aXR5OiAnTygoViArIEUpIGxvZyBWKScgfVxuICBdO1xuXG4gIGNvbnN0IGRmc0NvZGUgPSBgZnVuY3Rpb24gZGZzKGdyYXBoLCBzdGFydE5vZGUsIHZpc2l0ZWQgPSBuZXcgU2V0KCkpIHtcbiAgY29uc29sZS5sb2coc3RhcnROb2RlKTsgLy8gUHJvY2VzcyBjdXJyZW50IG5vZGVcbiAgdmlzaXRlZC5hZGQoc3RhcnROb2RlKTtcbiAgXG4gIC8vIFZpc2l0IGFsbCB1bnZpc2l0ZWQgbmVpZ2hib3JzXG4gIGZvciAoY29uc3QgbmVpZ2hib3Igb2YgZ3JhcGhbc3RhcnROb2RlXSkge1xuICAgIGlmICghdmlzaXRlZC5oYXMobmVpZ2hib3IpKSB7XG4gICAgICBkZnMoZ3JhcGgsIG5laWdoYm9yLCB2aXNpdGVkKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gVXNhZ2VcbmNvbnN0IGdyYXBoID0ge1xuICAnQSc6IFsnQicsICdDJ10sXG4gICdCJzogWydBJywgJ0QnLCAnRSddLFxuICAnQyc6IFsnQScsICdFJywgJ0YnXSxcbiAgJ0QnOiBbJ0InXSxcbiAgJ0UnOiBbJ0InLCAnQycsICdGJ10sXG4gICdGJzogWydDJywgJ0UnXVxufTtcblxuZGZzKGdyYXBoLCAnQScpO2A7XG5cbiAgY29uc3QgYmZzQ29kZSA9IGBmdW5jdGlvbiBiZnMoZ3JhcGgsIHN0YXJ0Tm9kZSkge1xuICBjb25zdCB2aXNpdGVkID0gbmV3IFNldCgpO1xuICBjb25zdCBxdWV1ZSA9IFtzdGFydE5vZGVdO1xuICBcbiAgdmlzaXRlZC5hZGQoc3RhcnROb2RlKTtcbiAgXG4gIHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gICAgY29uc3QgY3VycmVudE5vZGUgPSBxdWV1ZS5zaGlmdCgpO1xuICAgIGNvbnNvbGUubG9nKGN1cnJlbnROb2RlKTsgLy8gUHJvY2VzcyBjdXJyZW50IG5vZGVcbiAgICBcbiAgICAvLyBBZGQgYWxsIHVudmlzaXRlZCBuZWlnaGJvcnMgdG8gcXVldWVcbiAgICBmb3IgKGNvbnN0IG5laWdoYm9yIG9mIGdyYXBoW2N1cnJlbnROb2RlXSkge1xuICAgICAgaWYgKCF2aXNpdGVkLmhhcyhuZWlnaGJvcikpIHtcbiAgICAgICAgdmlzaXRlZC5hZGQobmVpZ2hib3IpO1xuICAgICAgICBxdWV1ZS5wdXNoKG5laWdoYm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gVXNhZ2VcbmNvbnN0IGdyYXBoID0ge1xuICAnQSc6IFsnQicsICdDJ10sXG4gICdCJzogWydBJywgJ0QnLCAnRSddLFxuICAnQyc6IFsnQScsICdFJywgJ0YnXSxcbiAgJ0QnOiBbJ0InXSxcbiAgJ0UnOiBbJ0InLCAnQycsICdGJ10sXG4gICdGJzogWydDJywgJ0UnXVxufTtcblxuYmZzKGdyYXBoLCAnQScpO2A7XG5cbiAgY29uc3QgZGlqa3N0cmFDb2RlID0gYGZ1bmN0aW9uIGRpamtzdHJhKGdyYXBoLCBzdGFydCkge1xuICBjb25zdCBkaXN0YW5jZXMgPSB7fTtcbiAgY29uc3QgcHJldiA9IHt9O1xuICBjb25zdCBwcSA9IFtdO1xuICBmb3IgKGNvbnN0IG5vZGUgaW4gZ3JhcGgpIHtcbiAgICBkaXN0YW5jZXNbbm9kZV0gPSBJbmZpbml0eTtcbiAgICBwcmV2W25vZGVdID0gbnVsbDtcbiAgfVxuICBkaXN0YW5jZXNbc3RhcnRdID0gMDtcbiAgcHEucHVzaCh7IG5vZGU6IHN0YXJ0LCBkaXN0OiAwIH0pO1xuICB3aGlsZSAocHEubGVuZ3RoID4gMCkge1xuICAgIHBxLnNvcnQoKGEsIGIpID0+IGEuZGlzdCAtIGIuZGlzdCk7XG4gICAgY29uc3QgeyBub2RlOiBjdXJyZW50IH0gPSBwcS5zaGlmdCgpO1xuICAgIGZvciAoY29uc3QgbmVpZ2hib3Igb2YgZ3JhcGhbY3VycmVudF0pIHtcbiAgICAgIGNvbnN0IHsgdG8sIHdlaWdodCB9ID0gbmVpZ2hib3I7XG4gICAgICBpZiAoZGlzdGFuY2VzW2N1cnJlbnRdICsgd2VpZ2h0IDwgZGlzdGFuY2VzW3RvXSkge1xuICAgICAgICBkaXN0YW5jZXNbdG9dID0gZGlzdGFuY2VzW2N1cnJlbnRdICsgd2VpZ2h0O1xuICAgICAgICBwcmV2W3RvXSA9IGN1cnJlbnQ7XG4gICAgICAgIHBxLnB1c2goeyBub2RlOiB0bywgZGlzdDogZGlzdGFuY2VzW3RvXSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHsgZGlzdGFuY2VzLCBwcmV2IH07XG59XG4vLyBVc2FnZVxuY29uc3QgZ3JhcGggPSB7XG4gICdBJzogW3sgdG86ICdCJywgd2VpZ2h0OiAyIH0sIHsgdG86ICdDJywgd2VpZ2h0OiAxIH1dLFxuICAnQic6IFt7IHRvOiAnQScsIHdlaWdodDogMiB9LCB7IHRvOiAnRCcsIHdlaWdodDogMyB9LCB7IHRvOiAnRScsIHdlaWdodDogMSB9XSxcbiAgJ0MnOiBbeyB0bzogJ0EnLCB3ZWlnaHQ6IDEgfSwgeyB0bzogJ0UnLCB3ZWlnaHQ6IDQgfSwgeyB0bzogJ0YnLCB3ZWlnaHQ6IDggfV0sXG4gICdEJzogW3sgdG86ICdCJywgd2VpZ2h0OiAzIH1dLFxuICAnRSc6IFt7IHRvOiAnQicsIHdlaWdodDogMSB9LCB7IHRvOiAnQycsIHdlaWdodDogNCB9LCB7IHRvOiAnRicsIHdlaWdodDogMiB9XSxcbiAgJ0YnOiBbeyB0bzogJ0MnLCB3ZWlnaHQ6IDggfSwgeyB0bzogJ0UnLCB3ZWlnaHQ6IDIgfV1cbn07XG5kaWprc3RyYShncmFwaCwgJ0EnKTtgO1xuXG4gIGNvbnN0IGdldEFsZ29yaXRobUNvZGUgPSAoKSA9PiB7XG4gICAgc3dpdGNoIChzZWxlY3RlZEFsZ29yaXRobSkge1xuICAgICAgY2FzZSAnZGZzJzpcbiAgICAgICAgcmV0dXJuIGRmc0NvZGU7XG4gICAgICBjYXNlICdiZnMnOlxuICAgICAgICByZXR1cm4gYmZzQ29kZTtcbiAgICAgIGNhc2UgJ2RpamtzdHJhJzpcbiAgICAgICAgcmV0dXJuIGRpamtzdHJhQ29kZTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBkZnNDb2RlO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBnZXRBZGphY2VuY3lMaXN0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGFkamFjZW5jeUxpc3Q6IHsgW2tleTogc3RyaW5nXTogeyB0bzogc3RyaW5nOyB3ZWlnaHQ6IG51bWJlciB9W10gfSA9IHt9O1xuICAgIFxuICAgIG5vZGVzLmZvckVhY2gobm9kZSA9PiB7XG4gICAgICBhZGphY2VuY3lMaXN0W25vZGUuaWRdID0gW107XG4gICAgfSk7XG4gICAgXG4gICAgZWRnZXMuZm9yRWFjaChlZGdlID0+IHtcbiAgICAgIGFkamFjZW5jeUxpc3RbZWRnZS5mcm9tXS5wdXNoKHsgdG86IGVkZ2UudG8sIHdlaWdodDogZWRnZS53ZWlnaHQgfSk7XG4gICAgICBhZGphY2VuY3lMaXN0W2VkZ2UudG9dLnB1c2goeyB0bzogZWRnZS5mcm9tLCB3ZWlnaHQ6IGVkZ2Uud2VpZ2h0IH0pO1xuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBhZGphY2VuY3lMaXN0O1xuICB9O1xuXG4gIGNvbnN0IHNsZWVwID0gKG1zOiBudW1iZXIpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xuXG4gIGNvbnN0IHJlc2V0ID0gKCkgPT4ge1xuICAgIHNldElzUGxheWluZyhmYWxzZSk7XG4gICAgaXNQbGF5aW5nUmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICBzZXROb2Rlcyhub2Rlcy5tYXAobm9kZSA9PiAoeyBcbiAgICAgIC4uLm5vZGUsIFxuICAgICAgdmlzaXRlZDogZmFsc2UsIFxuICAgICAgY3VycmVudDogZmFsc2UgXG4gICAgfSkpKTtcbiAgfTtcblxuICBjb25zdCBkZnNUcmF2ZXJzYWwgPSBhc3luYyAobm9kZUlkOiBzdHJpbmcsIHZpc2l0ZWQ6IFNldDxzdHJpbmc+LCBhZGphY2VuY3lMaXN0OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZ1tdIH0pID0+IHtcbiAgICBpZiAoIWlzUGxheWluZ1JlZi5jdXJyZW50IHx8IHZpc2l0ZWQuaGFzKG5vZGVJZCkpIHJldHVybjtcbiAgICBcbiAgICB2aXNpdGVkLmFkZChub2RlSWQpO1xuICAgIFxuICAgIHNldE5vZGVzKHByZXYgPT4gcHJldi5tYXAobm9kZSA9PiAoe1xuICAgICAgLi4ubm9kZSxcbiAgICAgIGN1cnJlbnQ6IG5vZGUuaWQgPT09IG5vZGVJZCxcbiAgICAgIHZpc2l0ZWQ6IHZpc2l0ZWQuaGFzKG5vZGUuaWQpXG4gICAgfSkpKTtcbiAgICBcbiAgICBhd2FpdCBzbGVlcCgxNTAwKTtcbiAgICBcbiAgICBpZiAoIWlzUGxheWluZ1JlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgZm9yIChjb25zdCBuZWlnaGJvciBvZiBhZGphY2VuY3lMaXN0W25vZGVJZF0pIHtcbiAgICAgIGlmICghdmlzaXRlZC5oYXMobmVpZ2hib3IpICYmIGlzUGxheWluZ1JlZi5jdXJyZW50KSB7XG4gICAgICAgIGF3YWl0IGRmc1RyYXZlcnNhbChuZWlnaGJvciwgdmlzaXRlZCwgYWRqYWNlbmN5TGlzdCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChpc1BsYXlpbmdSZWYuY3VycmVudCkge1xuICAgICAgc2V0Tm9kZXMocHJldiA9PiBwcmV2Lm1hcChub2RlID0+ICh7XG4gICAgICAgIC4uLm5vZGUsXG4gICAgICAgIGN1cnJlbnQ6IGZhbHNlXG4gICAgICB9KSkpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBiZnNUcmF2ZXJzYWwgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdmlzaXRlZCA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuICAgIGNvbnN0IHF1ZXVlID0gWydBJ107XG4gICAgdmlzaXRlZC5hZGQoJ0EnKTtcbiAgICBcbiAgICB3aGlsZSAocXVldWUubGVuZ3RoID4gMCAmJiBpc1BsYXlpbmdSZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgY3VycmVudE5vZGUgPSBxdWV1ZS5zaGlmdCgpITtcbiAgICAgIFxuICAgICAgc2V0Tm9kZXMocHJldiA9PiBwcmV2Lm1hcChub2RlID0+ICh7XG4gICAgICAgIC4uLm5vZGUsXG4gICAgICAgIGN1cnJlbnQ6IG5vZGUuaWQgPT09IGN1cnJlbnROb2RlLFxuICAgICAgICB2aXNpdGVkOiB2aXNpdGVkLmhhcyhub2RlLmlkKVxuICAgICAgfSkpKTtcbiAgICAgIFxuICAgICAgYXdhaXQgc2xlZXAoMTUwMCk7XG4gICAgICBcbiAgICAgIGlmICghaXNQbGF5aW5nUmVmLmN1cnJlbnQpIGJyZWFrO1xuICAgICAgXG4gICAgICBjb25zdCBhZGphY2VuY3lMaXN0ID0gZ2V0QWRqYWNlbmN5TGlzdCgpO1xuICAgICAgZm9yIChjb25zdCBuZWlnaGJvciBvZiBhZGphY2VuY3lMaXN0W2N1cnJlbnROb2RlXSkge1xuICAgICAgICBpZiAoIXZpc2l0ZWQuaGFzKG5laWdoYm9yKSkge1xuICAgICAgICAgIHZpc2l0ZWQuYWRkKG5laWdoYm9yKTtcbiAgICAgICAgICBxdWV1ZS5wdXNoKG5laWdoYm9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBzZXROb2RlcyhwcmV2ID0+IHByZXYubWFwKG5vZGUgPT4gKHtcbiAgICAgIC4uLm5vZGUsXG4gICAgICBjdXJyZW50OiBmYWxzZVxuICAgIH0pKSk7XG4gICAgXG4gICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICBpc1BsYXlpbmdSZWYuY3VycmVudCA9IGZhbHNlO1xuICB9O1xuXG4gIC8vIERpamtzdHJhIHZpc3VhbGl6YXRpb24gbG9naWNcbiAgY29uc3QgZGlqa3N0cmFUcmF2ZXJzYWwgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYWRqYWNlbmN5TGlzdCA9IGdldEFkamFjZW5jeUxpc3QoKTtcbiAgICBjb25zdCBkaXN0YW5jZXMgPSB7fTtcbiAgICBjb25zdCBwcmV2ID0ge307XG4gICAgY29uc3QgdmlzaXRlZCA9IG5ldyBTZXQoKTtcbiAgICBjb25zdCBwcSA9IFtdO1xuICAgIG5vZGVzLmZvckVhY2gobm9kZSA9PiB7XG4gICAgICBkaXN0YW5jZXNbbm9kZS5pZF0gPSBJbmZpbml0eTtcbiAgICAgIHByZXZbbm9kZS5pZF0gPSBudWxsO1xuICAgIH0pO1xuICAgIGRpc3RhbmNlc1snQSddID0gMDtcbiAgICBwcS5wdXNoKHsgbm9kZTogJ0EnLCBkaXN0OiAwIH0pO1xuICAgIHdoaWxlIChwcS5sZW5ndGggPiAwICYmIGlzUGxheWluZ1JlZi5jdXJyZW50KSB7XG4gICAgICBwcS5zb3J0KChhLCBiKSA9PiBhLmRpc3QgLSBiLmRpc3QpO1xuICAgICAgY29uc3QgeyBub2RlOiBjdXJyZW50IH0gPSBwcS5zaGlmdCgpO1xuICAgICAgaWYgKHZpc2l0ZWQuaGFzKGN1cnJlbnQpKSBjb250aW51ZTtcbiAgICAgIHZpc2l0ZWQuYWRkKGN1cnJlbnQpO1xuICAgICAgc2V0Tm9kZXMocHJldk5vZGVzID0+IHByZXZOb2Rlcy5tYXAobiA9PiAoe1xuICAgICAgICAuLi5uLFxuICAgICAgICBjdXJyZW50OiBuLmlkID09PSBjdXJyZW50LFxuICAgICAgICB2aXNpdGVkOiB2aXNpdGVkLmhhcyhuLmlkKVxuICAgICAgfSkpKTtcbiAgICAgIGF3YWl0IHNsZWVwKDEyMDApO1xuICAgICAgZm9yIChjb25zdCBuZWlnaGJvciBvZiBhZGphY2VuY3lMaXN0W2N1cnJlbnRdKSB7XG4gICAgICAgIGNvbnN0IHsgdG8sIHdlaWdodCB9ID0gbmVpZ2hib3I7XG4gICAgICAgIGlmIChkaXN0YW5jZXNbY3VycmVudF0gKyB3ZWlnaHQgPCBkaXN0YW5jZXNbdG9dKSB7XG4gICAgICAgICAgZGlzdGFuY2VzW3RvXSA9IGRpc3RhbmNlc1tjdXJyZW50XSArIHdlaWdodDtcbiAgICAgICAgICBwcmV2W3RvXSA9IGN1cnJlbnQ7XG4gICAgICAgICAgcHEucHVzaCh7IG5vZGU6IHRvLCBkaXN0OiBkaXN0YW5jZXNbdG9dIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIC8vIEhpZ2hsaWdodCBzaG9ydGVzdCBwYXRoIGZyb20gQSB0byBGIChhcyBleGFtcGxlKVxuICAgIGxldCBwYXRoID0gW107XG4gICAgbGV0IGN1cnIgPSAnRic7XG4gICAgd2hpbGUgKGN1cnIgJiYgcHJldltjdXJyXSkge1xuICAgICAgcGF0aC51bnNoaWZ0KFtwcmV2W2N1cnJdLCBjdXJyXSk7XG4gICAgICBjdXJyID0gcHJldltjdXJyXTtcbiAgICB9XG4gICAgc2V0Tm9kZXMocHJldk5vZGVzID0+IHByZXZOb2Rlcy5tYXAobiA9PiAoe1xuICAgICAgLi4ubixcbiAgICAgIGN1cnJlbnQ6IGZhbHNlLFxuICAgICAgdmlzaXRlZDogdmlzaXRlZC5oYXMobi5pZCkgfHwgbi5pZCA9PT0gJ0EnIHx8IG4uaWQgPT09ICdGJ1xuICAgIH0pKSk7XG4gICAgLy8gT3B0aW9uYWxseSwgeW91IGNhbiBoaWdobGlnaHQgZWRnZXMgaW4gdGhlIHBhdGhcbiAgICAvLyAuLi5cbiAgICBzZXRJc1BsYXlpbmcoZmFsc2UpO1xuICAgIGlzUGxheWluZ1JlZi5jdXJyZW50ID0gZmFsc2U7XG4gIH07XG5cbiAgY29uc3QgcGxheSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoaXNQbGF5aW5nKSByZXR1cm47XG4gICAgXG4gICAgc2V0SXNQbGF5aW5nKHRydWUpO1xuICAgIGlzUGxheWluZ1JlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICBcbiAgICByZXNldCgpO1xuICAgIGF3YWl0IHNsZWVwKDEwMCk7XG4gICAgXG4gICAgaXNQbGF5aW5nUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgIFxuICAgIGlmIChzZWxlY3RlZEFsZ29yaXRobSA9PT0gJ2RmcycpIHtcbiAgICAgIGNvbnN0IGFkamFjZW5jeUxpc3QgPSBnZXRBZGphY2VuY3lMaXN0KCk7XG4gICAgICBhd2FpdCBkZnNUcmF2ZXJzYWwoJ0EnLCBuZXcgU2V0KCksIGFkamFjZW5jeUxpc3QpO1xuICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWRBbGdvcml0aG0gPT09ICdiZnMnKSB7XG4gICAgICBhd2FpdCBiZnNUcmF2ZXJzYWwoKTtcbiAgICB9IGVsc2UgaWYgKHNlbGVjdGVkQWxnb3JpdGhtID09PSAnZGlqa3N0cmEnKSB7XG4gICAgICBhd2FpdCBkaWprc3RyYVRyYXZlcnNhbCgpO1xuICAgIH1cbiAgICBcbiAgICBzZXRJc1BsYXlpbmcoZmFsc2UpO1xuICAgIGlzUGxheWluZ1JlZi5jdXJyZW50ID0gZmFsc2U7XG4gIH07XG5cbiAgY29uc3QgcGF1c2UgPSAoKSA9PiB7XG4gICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICBpc1BsYXlpbmdSZWYuY3VycmVudCA9IGZhbHNlO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmVzZXQoKTtcbiAgfSwgW3NlbGVjdGVkQWxnb3JpdGhtXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpc1BsYXlpbmdSZWYuY3VycmVudCA9IGlzUGxheWluZztcbiAgfSwgW2lzUGxheWluZ10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgIDxBbGdvcml0aG1TZWxlY3RvclxuICAgICAgICBhbGdvcml0aG1zPXthbGdvcml0aG1zfVxuICAgICAgICBzZWxlY3RlZEFsZ29yaXRobT17c2VsZWN0ZWRBbGdvcml0aG19XG4gICAgICAgIHNldFNlbGVjdGVkQWxnb3JpdGhtPXtzZXRTZWxlY3RlZEFsZ29yaXRobX1cbiAgICAgIC8+XG4gICAgICBcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBsZzpncmlkLWNvbHMtMiBnYXAtOFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNlwiPlxuICAgICAgICAgIDxHcmFwaFZpc3VhbGl6YXRpb25cbiAgICAgICAgICAgIG5vZGVzPXtub2Rlc31cbiAgICAgICAgICAgIGVkZ2VzPXtlZGdlc31cbiAgICAgICAgICAvPlxuICAgICAgICAgIFxuICAgICAgICAgIDxDb250cm9sUGFuZWxcbiAgICAgICAgICAgIGlzUGxheWluZz17aXNQbGF5aW5nfVxuICAgICAgICAgICAgb25QbGF5PXtwbGF5fVxuICAgICAgICAgICAgb25QYXVzZT17cGF1c2V9XG4gICAgICAgICAgICBvblJlc2V0PXtyZXNldH1cbiAgICAgICAgICAgIGhpZGVHZW5lcmF0ZUFycmF5PXt0cnVlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgICAgPENvZGVEaXNwbGF5XG4gICAgICAgICAgY29kZT17Z2V0QWxnb3JpdGhtQ29kZSgpfVxuICAgICAgICAgIGxhbmd1YWdlPVwiamF2YXNjcmlwdFwiXG4gICAgICAgICAgdGl0bGU9e2FsZ29yaXRobXMuZmluZChhID0+IGEuaWQgPT09IHNlbGVjdGVkQWxnb3JpdGhtKT8ubmFtZSB8fCAnJ31cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUmVmIiwiQWxnb3JpdGhtU2VsZWN0b3IiLCJHcmFwaFZpc3VhbGl6YXRpb24iLCJDb2RlRGlzcGxheSIsIkNvbnRyb2xQYW5lbCIsIkdyYXBoQWxnb3JpdGhtcyIsImFsZ29yaXRobXMiLCJzZWxlY3RlZEFsZ29yaXRobSIsInNldFNlbGVjdGVkQWxnb3JpdGhtIiwiaXNQbGF5aW5nIiwic2V0SXNQbGF5aW5nIiwiaXNQbGF5aW5nUmVmIiwibm9kZXMiLCJzZXROb2RlcyIsImlkIiwieCIsInkiLCJ2aXNpdGVkIiwiY3VycmVudCIsImVkZ2VzIiwiZnJvbSIsInRvIiwid2VpZ2h0IiwibmFtZSIsImNvbXBsZXhpdHkiLCJkZnNDb2RlIiwiYmZzQ29kZSIsImRpamtzdHJhQ29kZSIsImdldEFsZ29yaXRobUNvZGUiLCJnZXRBZGphY2VuY3lMaXN0IiwiYWRqYWNlbmN5TGlzdCIsImZvckVhY2giLCJub2RlIiwiZWRnZSIsInB1c2giLCJzbGVlcCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwicmVzZXQiLCJtYXAiLCJkZnNUcmF2ZXJzYWwiLCJub2RlSWQiLCJoYXMiLCJhZGQiLCJwcmV2IiwibmVpZ2hib3IiLCJiZnNUcmF2ZXJzYWwiLCJTZXQiLCJxdWV1ZSIsImxlbmd0aCIsImN1cnJlbnROb2RlIiwic2hpZnQiLCJkaWprc3RyYVRyYXZlcnNhbCIsImRpc3RhbmNlcyIsInBxIiwiSW5maW5pdHkiLCJkaXN0Iiwic29ydCIsImEiLCJiIiwicHJldk5vZGVzIiwibiIsInBhdGgiLCJjdXJyIiwidW5zaGlmdCIsInBsYXkiLCJwYXVzZSIsImRpdiIsImNsYXNzTmFtZSIsIm9uUGxheSIsIm9uUGF1c2UiLCJvblJlc2V0IiwiaGlkZUdlbmVyYXRlQXJyYXkiLCJjb2RlIiwibGFuZ3VhZ2UiLCJ0aXRsZSIsImZpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx\n"));

/***/ })

});