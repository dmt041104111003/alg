"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/algorithms/SortingAlgorithms.tsx":
/*!*****************************************************!*\
  !*** ./components/algorithms/SortingAlgorithms.tsx ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SortingAlgorithms; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AlgorithmSelector */ \"(app-pages-browser)/./components/AlgorithmSelector.tsx\");\n/* harmony import */ var _VisualizationArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../VisualizationArea */ \"(app-pages-browser)/./components/VisualizationArea.tsx\");\n/* harmony import */ var _CodeDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CodeDisplay */ \"(app-pages-browser)/./components/CodeDisplay.tsx\");\n/* harmony import */ var _ControlPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ControlPanel */ \"(app-pages-browser)/./components/ControlPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst bubbleSortLines = [\n    \"function bubbleSort(arr) {\",\n    \"  const n = arr.length;\",\n    \"  for (let i = 0; i < n - 1; i++) {\",\n    \"    for (let j = 0; j < n - i - 1; j++) {\",\n    \"      if (arr[j] > arr[j + 1]) {\",\n    \"        // Swap elements\",\n    \"        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\",\n    \"      }\",\n    \"    }\",\n    \"  }\",\n    \"  return arr;\",\n    \"}\"\n];\nconst quickSortLines = [\n    \"function quickSort(arr, low = 0, high = arr.length - 1) {\",\n    \"  if (low < high) {\",\n    \"    const pi = partition(arr, low, high);\",\n    \"    quickSort(arr, low, pi - 1);\",\n    \"    quickSort(arr, pi + 1, high);\",\n    \"  }\",\n    \"}\",\n    \"\",\n    \"function partition(arr, low, high) {\",\n    \"  const pivot = arr[high];\",\n    \"  let i = low - 1;\",\n    \"  for (let j = low; j < high; j++) {\",\n    \"    if (arr[j] < pivot) {\",\n    \"      i++;\",\n    \"      [arr[i], arr[j]] = [arr[j], arr[i]];\",\n    \"    }\",\n    \"  }\",\n    \"  [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\",\n    \"  return i + 1;\",\n    \"}\"\n];\nconst mergeSortLines = [\n    \"function mergeSort(arr) {\",\n    \"  if (arr.length <= 1) return arr;\",\n    \"  const mid = Math.floor(arr.length / 2);\",\n    \"  const left = mergeSort(arr.slice(0, mid));\",\n    \"  const right = mergeSort(arr.slice(mid));\",\n    \"  return merge(left, right);\",\n    \"}\",\n    \"\",\n    \"function merge(left, right) {\",\n    \"  const result = [];\",\n    \"  let i = 0, j = 0;\",\n    \"  while (i < left.length && j < right.length) {\",\n    \"    if (left[i] <= right[j]) {\",\n    \"      result.push(left[i++]);\",\n    \"    } else {\",\n    \"      result.push(right[j++]);\",\n    \"    }\",\n    \"  }\",\n    \"  return result.concat(left.slice(i)).concat(right.slice(j));\",\n    \"}\"\n];\nconst insertionSortLines = [\n    \"function insertionSort(arr) {\",\n    \"  for (let i = 1; i < arr.length; i++) {\",\n    \"    let key = arr[i];\",\n    \"    let j = i - 1;\",\n    \"    while (j >= 0 && arr[j] > key) {\",\n    \"      arr[j + 1] = arr[j];\",\n    \"      j = j - 1;\",\n    \"    }\",\n    \"    arr[j + 1] = key;\",\n    \"  }\",\n    \"  return arr;\",\n    \"}\"\n];\nconst selectionSortLines = [\n    \"function selectionSort(arr) {\",\n    \"  for (let i = 0; i < arr.length - 1; i++) {\",\n    \"    let minIdx = i;\",\n    \"    for (let j = i + 1; j < arr.length; j++) {\",\n    \"      if (arr[j] < arr[minIdx]) {\",\n    \"        minIdx = j;\",\n    \"      }\",\n    \"    }\",\n    \"    if (minIdx !== i) {\",\n    \"      [arr[i], arr[minIdx]] = [arr[minIdx], arr[i]];\",\n    \"    }\",\n    \"  }\",\n    \"  return arr;\",\n    \"}\"\n];\nconst heapSortLines = [\n    \"function heapSort(arr) {\",\n    \"  let n = arr.length;\",\n    \"  for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\",\n    \"    heapify(arr, n, i);\",\n    \"  }\",\n    \"  for (let i = n - 1; i > 0; i--) {\",\n    \"    [arr[0], arr[i]] = [arr[i], arr[0]];\",\n    \"    heapify(arr, i, 0);\",\n    \"  }\",\n    \"  return arr;\",\n    \"}\",\n    \"\",\n    \"function heapify(arr, n, i) {\",\n    \"  let largest = i;\",\n    \"  let l = 2 * i + 1;\",\n    \"  let r = 2 * i + 2;\",\n    \"  if (l < n && arr[l] > arr[largest]) largest = l;\",\n    \"  if (r < n && arr[r] > arr[largest]) largest = r;\",\n    \"  if (largest !== i) {\",\n    \"    [arr[i], arr[largest]] = [arr[largest], arr[i]];\",\n    \"    heapify(arr, n, largest);\",\n    \"  }\",\n    \"}\"\n];\nfunction SortingAlgorithms() {\n    var _algorithms_find;\n    _s();\n    const [selectedAlgorithm, setSelectedAlgorithm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [array, setArray] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        64,\n        34,\n        25,\n        12,\n        22,\n        11,\n        90\n    ]);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isPlayingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [currentStep, setCurrentStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [comparingIndices, setComparingIndices] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [sortedIndices, setSortedIndices] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [finalSorted, setFinalSorted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [numComparisons, setNumComparisons] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [numSwaps, setNumSwaps] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [steps, setSteps] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentStepIdx, setCurrentStepIdx] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoPlaying, setIsAutoPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const algorithms = [\n        {\n            id: \"bubble\",\n            name: \"Bubble Sort\",\n            complexity: \"O(n^2)\"\n        },\n        {\n            id: \"quick\",\n            name: \"Quick Sort\",\n            complexity: \"O(n log n)\"\n        },\n        {\n            id: \"merge\",\n            name: \"Merge Sort\",\n            complexity: \"O(n log n)\"\n        },\n        {\n            id: \"insertion\",\n            name: \"Insertion Sort\",\n            complexity: \"O(n^2)\"\n        },\n        {\n            id: \"selection\",\n            name: \"Selection Sort\",\n            complexity: \"O(n^2)\"\n        },\n        {\n            id: \"heap\",\n            name: \"Heap Sort\",\n            complexity: \"O(n log n)\"\n        }\n    ];\n    const bubbleSortCode = \"function bubbleSort(arr) {\\n  const n = arr.length;\\n  for (let i = 0; i < n - 1; i++) {\\n    for (let j = 0; j < n - i - 1; j++) {\\n      if (arr[j] > arr[j + 1]) {\\n        // Swap elements\\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\\n      }\\n    }\\n  }\\n  return arr;\\n}\";\n    const quickSortCode = \"function quickSort(arr, low = 0, high = arr.length - 1) {\\n  if (low < high) {\\n    const pi = partition(arr, low, high);\\n    quickSort(arr, low, pi - 1);\\n    quickSort(arr, pi + 1, high);\\n  }\\n}\\n\\nfunction partition(arr, low, high) {\\n  const pivot = arr[high];\\n  let i = low - 1;\\n  \\n  for (let j = low; j < high; j++) {\\n    if (arr[j] < pivot) {\\n      i++;\\n      [arr[i], arr[j]] = [arr[j], arr[i]];\\n    }\\n  }\\n  [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\\n  return i + 1;\\n}\";\n    const mergeSortCode = \"function mergeSort(arr) {\\n  if (arr.length <= 1) return arr;\\n  \\n  const mid = Math.floor(arr.length / 2);\\n  const left = mergeSort(arr.slice(0, mid));\\n  const right = mergeSort(arr.slice(mid));\\n  \\n  return merge(left, right);\\n}\\n\\nfunction merge(left, right) {\\n  const result = [];\\n  let i = 0, j = 0;\\n  \\n  while (i < left.length && j < right.length) {\\n    if (left[i] <= right[j]) {\\n      result.push(left[i++]);\\n    } else {\\n      result.push(right[j++]);\\n    }\\n  }\\n  \\n  return result.concat(left.slice(i)).concat(right.slice(j));\\n}\";\n    const getAlgorithmCode = ()=>{\n        switch(selectedAlgorithm){\n            case \"bubble\":\n                return bubbleSortCode;\n            case \"quick\":\n                return quickSortCode;\n            case \"merge\":\n                return mergeSortCode;\n            default:\n                return bubbleSortCode;\n        }\n    };\n    const generateRandomArray = ()=>{\n        const newArray = Array.from({\n            length: 8\n        }, ()=>Math.floor(Math.random() * 100) + 1);\n        setArray(newArray);\n        reset();\n    };\n    // Remove extra Play button, integrate with ControlPanel\n    // When Play is pressed in ControlPanel, always start step-by-step visualization for Bubble Sort\n    const play = async ()=>{\n        if (isPlaying) return;\n        setIsPlaying(true);\n        isPlayingRef.current = true;\n        reset();\n        await sleep(100);\n        isPlayingRef.current = true;\n        let steps = [];\n        if (selectedAlgorithm === \"bubble\") {\n            steps = generateBubbleSortSteps(array);\n        } else if (selectedAlgorithm === \"quick\") {\n            steps = generateQuickSortSteps(array);\n        } else if (selectedAlgorithm === \"merge\") {\n            steps = generateMergeSortSteps(array);\n        } else if (selectedAlgorithm === \"insertion\") {\n            steps = generateInsertionSortSteps(array);\n        } else if (selectedAlgorithm === \"selection\") {\n            steps = generateSelectionSortSteps(array);\n        } else if (selectedAlgorithm === \"heap\") {\n            steps = generateHeapSortSteps(array);\n        }\n        setSteps(steps);\n        setCurrentStepIdx(0);\n        setIsAutoPlaying(true);\n    };\n    // Reset also resets step-by-step state\n    const reset = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n        setCurrentStep(0);\n        setComparingIndices([]);\n        setSortedIndices([]);\n        setFinalSorted(null);\n        setNumComparisons(0);\n        setNumSwaps(0);\n        setSteps([]);\n        setCurrentStepIdx(0);\n        setIsAutoPlaying(false);\n    };\n    const pause = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n    const bubbleSort = async ()=>{\n        const arr = [\n            ...array\n        ];\n        const n = arr.length;\n        let comparisons = 0;\n        let swaps = 0;\n        for(let i = 0; i < n - 1 && isPlayingRef.current; i++){\n            for(let j = 0; j < n - i - 1 && isPlayingRef.current; j++){\n                setComparingIndices([\n                    j,\n                    j + 1\n                ]);\n                comparisons++;\n                await sleep(800);\n                if (!isPlayingRef.current) return;\n                if (arr[j] > arr[j + 1]) {\n                    [arr[j], arr[j + 1]] = [\n                        arr[j + 1],\n                        arr[j]\n                    ];\n                    setArray([\n                        ...arr\n                    ]);\n                    swaps++;\n                }\n            }\n            setSortedIndices((prev)=>[\n                    ...prev,\n                    n - 1 - i\n                ]);\n        }\n        if (isPlayingRef.current) {\n            setSortedIndices(Array.from({\n                length: n\n            }, (_, i)=>i));\n            setComparingIndices([]);\n            setFinalSorted([\n                ...arr\n            ]);\n            setNumComparisons(comparisons);\n            setNumSwaps(swaps);\n            setIsPlaying(false);\n            isPlayingRef.current = false;\n        }\n    };\n    const quickSort = async function(arr) {\n        let low = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, high = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : arr.length - 1, indices = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Array.from({\n            length: arr.length\n        }, (_, i)=>i);\n        if (low < high && isPlayingRef.current) {\n            const pi = await partition(arr, low, high, indices);\n            if (isPlayingRef.current) {\n                await quickSort(arr, low, pi - 1, indices);\n                await quickSort(arr, pi + 1, high, indices);\n            }\n        }\n    };\n    const partition = async (arr, low, high, indices)=>{\n        const pivot = arr[high];\n        let i = low - 1;\n        setComparingIndices([\n            high\n        ]);\n        await sleep(600);\n        for(let j = low; j < high && isPlayingRef.current; j++){\n            setComparingIndices([\n                j,\n                high\n            ]);\n            await sleep(600);\n            if (!isPlayingRef.current) return i + 1;\n            if (arr[j] < pivot) {\n                i++;\n                [arr[i], arr[j]] = [\n                    arr[j],\n                    arr[i]\n                ];\n                setArray([\n                    ...arr\n                ]);\n                await sleep(400);\n            }\n        }\n        if (isPlayingRef.current) {\n            [arr[i + 1], arr[high]] = [\n                arr[high],\n                arr[i + 1]\n            ];\n            setArray([\n                ...arr\n            ]);\n            setSortedIndices((prev)=>[\n                    ...prev,\n                    i + 1\n                ]);\n            await sleep(600);\n        }\n        return i + 1;\n    };\n    const mergeSort = async function() {\n        let startArr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            ...array\n        ], start = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : array.length - 1;\n        if (start >= end || !isPlayingRef.current) return;\n        const mid = Math.floor((start + end) / 2);\n        setComparingIndices([\n            start,\n            mid,\n            end\n        ]);\n        await sleep(800);\n        if (!isPlayingRef.current) return;\n        await mergeSort(startArr, start, mid);\n        await mergeSort(startArr, mid + 1, end);\n        if (isPlayingRef.current) {\n            await merge(startArr, start, mid, end);\n        }\n    };\n    const merge = async (arr, start, mid, end)=>{\n        const left = arr.slice(start, mid + 1);\n        const right = arr.slice(mid + 1, end + 1);\n        let i = 0, j = 0, k = start;\n        while(i < left.length && j < right.length && isPlayingRef.current){\n            setComparingIndices([\n                start + i,\n                mid + 1 + j\n            ]);\n            await sleep(600);\n            if (!isPlayingRef.current) return;\n            if (left[i] <= right[j]) {\n                arr[k] = left[i];\n                i++;\n            } else {\n                arr[k] = right[j];\n                j++;\n            }\n            k++;\n            setArray([\n                ...arr\n            ]);\n        }\n        while(i < left.length && isPlayingRef.current){\n            arr[k] = left[i];\n            i++;\n            k++;\n            setArray([\n                ...arr\n            ]);\n            await sleep(400);\n        }\n        while(j < right.length && isPlayingRef.current){\n            arr[k] = right[j];\n            j++;\n            k++;\n            setArray([\n                ...arr\n            ]);\n            await sleep(400);\n        }\n        if (isPlayingRef.current && start === 0 && end === array.length - 1) {\n            setSortedIndices(Array.from({\n                length: array.length\n            }, (_, i)=>i));\n        }\n    };\n    // Generate steps for Bubble Sort\n    const generateBubbleSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const n = arr.length;\n        const steps = [];\n        let comparisons = 0;\n        let swaps = 0;\n        steps.push({\n            line: 0,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            j: undefined,\n            comparing: [],\n            sorted: [],\n            desc: \"Start\",\n            comparisons,\n            swaps\n        });\n        for(let i = 0; i < n - 1; i++){\n            steps.push({\n                line: 2,\n                arr: [\n                    ...arr\n                ],\n                i,\n                j: undefined,\n                comparing: [],\n                sorted: [],\n                desc: \"i=\".concat(i),\n                comparisons,\n                swaps\n            });\n            for(let j = 0; j < n - i - 1; j++){\n                comparisons++;\n                steps.push({\n                    line: 3,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    j,\n                    comparing: [\n                        j,\n                        j + 1\n                    ],\n                    sorted: [],\n                    desc: \"Compare arr[\".concat(j, \"] and arr[\").concat(j + 1, \"]\"),\n                    comparisons,\n                    swaps\n                });\n                if (arr[j] > arr[j + 1]) {\n                    steps.push({\n                        line: 4,\n                        arr: [\n                            ...arr\n                        ],\n                        i,\n                        j,\n                        comparing: [\n                            j,\n                            j + 1\n                        ],\n                        sorted: [],\n                        desc: \"arr[\".concat(j, \"] > arr[\").concat(j + 1, \"], swap\"),\n                        comparisons,\n                        swaps\n                    });\n                    [arr[j], arr[j + 1]] = [\n                        arr[j + 1],\n                        arr[j]\n                    ];\n                    swaps++;\n                    steps.push({\n                        line: 6,\n                        arr: [\n                            ...arr\n                        ],\n                        i,\n                        j,\n                        comparing: [\n                            j,\n                            j + 1\n                        ],\n                        sorted: [],\n                        desc: \"Swapped arr[\".concat(j, \"] and arr[\").concat(j + 1, \"]\"),\n                        comparisons,\n                        swaps\n                    });\n                }\n            }\n            steps.push({\n                line: 8,\n                arr: [\n                    ...arr\n                ],\n                i,\n                j: undefined,\n                comparing: [],\n                sorted: Array.from({\n                    length: i + 1\n                }, (_, k)=>n - 1 - k),\n                desc: \"Mark sorted: \".concat(n - 1 - i),\n                comparisons,\n                swaps\n            });\n        }\n        steps.push({\n            line: 10,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            j: undefined,\n            comparing: [],\n            sorted: Array.from({\n                length: n\n            }, (_, k)=>k),\n            desc: \"Done\",\n            comparisons,\n            swaps\n        });\n        return steps;\n    };\n    // Generate steps for Quick Sort\n    const generateQuickSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const steps = [];\n        let comparisons = 0;\n        let swaps = 0;\n        const sortedSet = new Set();\n        function record(line, vars, desc) {\n            let comparing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], sorted = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];\n            steps.push({\n                line,\n                arr: [\n                    ...arr\n                ],\n                ...vars,\n                comparisons,\n                swaps,\n                desc,\n                comparing,\n                sorted: [\n                    ...sortedSet,\n                    ...sorted\n                ]\n            });\n        }\n        function partition(low, high) {\n            record(9, {\n                low,\n                high\n            }, \"partition(\".concat(low, \", \").concat(high, \")\"), [\n                high\n            ], []);\n            const pivot = arr[high];\n            let i = low - 1;\n            record(10, {\n                low,\n                high,\n                i,\n                pivot\n            }, \"pivot = arr[\".concat(high, \"] = \").concat(pivot), [\n                high\n            ], []);\n            for(let j = low; j < high; j++){\n                comparisons++;\n                record(12, {\n                    low,\n                    high,\n                    i,\n                    j,\n                    pivot\n                }, \"Compare arr[\".concat(j, \"] < pivot (\").concat(arr[j], \" < \").concat(pivot, \")\"), [\n                    j,\n                    high\n                ], []);\n                if (arr[j] < pivot) {\n                    i++;\n                    record(13, {\n                        low,\n                        high,\n                        i,\n                        j,\n                        pivot\n                    }, \"arr[\".concat(j, \"] < pivot, i++\"), [\n                        i,\n                        j\n                    ], []);\n                    [arr[i], arr[j]] = [\n                        arr[j],\n                        arr[i]\n                    ];\n                    swaps++;\n                    record(14, {\n                        low,\n                        high,\n                        i,\n                        j,\n                        pivot\n                    }, \"Swapped arr[\".concat(i, \"] and arr[\").concat(j, \"]\"), [\n                        i,\n                        j\n                    ], []);\n                }\n            }\n            [arr[i + 1], arr[high]] = [\n                arr[high],\n                arr[i + 1]\n            ];\n            swaps++;\n            record(17, {\n                low,\n                high,\n                i,\n                pivot\n            }, \"Swapped arr[\".concat(i + 1, \"] and arr[\").concat(high, \"]\"), [\n                i + 1,\n                high\n            ], []);\n            record(18, {\n                low,\n                high,\n                i,\n                pivot\n            }, \"Return \".concat(i + 1), [], []);\n            return i + 1;\n        }\n        function quickSort(low, high) {\n            record(0, {\n                low,\n                high\n            }, \"quickSort(\".concat(low, \", \").concat(high, \")\"), [], Array.from(sortedSet));\n            if (low < high) {\n                record(1, {\n                    low,\n                    high\n                }, \"low < high (\".concat(low, \" < \").concat(high, \")\"), [], Array.from(sortedSet));\n                const pi = partition(low, high);\n                sortedSet.add(pi);\n                record(3, {\n                    low,\n                    high,\n                    pi\n                }, \"quickSort(\".concat(low, \", \").concat(pi - 1, \")\"), [], Array.from(sortedSet));\n                quickSort(low, pi - 1);\n                record(4, {\n                    low,\n                    high,\n                    pi\n                }, \"quickSort(\".concat(pi + 1, \", \").concat(high, \")\"), [], Array.from(sortedSet));\n                quickSort(pi + 1, high);\n            } else if (low === high) {\n                sortedSet.add(low);\n                record(7, {\n                    low,\n                    high\n                }, \"Mark sorted: \".concat(low), [], Array.from(sortedSet));\n            }\n        }\n        quickSort(0, arr.length - 1);\n        return steps;\n    };\n    // Generate steps for Merge Sort\n    const generateMergeSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const steps = [];\n        let comparisons = 0;\n        function record(line, vars, desc) {\n            let comparing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], sorted = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];\n            steps.push({\n                line,\n                arr: [\n                    ...arr\n                ],\n                ...vars,\n                comparisons,\n                desc,\n                comparing,\n                sorted\n            });\n        }\n        function mergeSort(start, end) {\n            record(0, {\n                start,\n                end\n            }, \"mergeSort(\".concat(start, \", \").concat(end, \")\"), [], []);\n            if (start >= end) return;\n            const mid = Math.floor((start + end) / 2);\n            record(2, {\n                start,\n                end,\n                mid\n            }, \"mid = \".concat(mid), [], []);\n            mergeSort(start, mid);\n            mergeSort(mid + 1, end);\n            merge(start, mid, end);\n        }\n        function merge(start, mid, end) {\n            let left = arr.slice(start, mid + 1);\n            let right = arr.slice(mid + 1, end + 1);\n            let i = 0, j = 0, k = start;\n            record(8, {\n                start,\n                mid,\n                end,\n                left: [\n                    ...left\n                ],\n                right: [\n                    ...right\n                ],\n                k\n            }, \"merge left [\".concat(left, \"] and right [\").concat(right, \"]\"), [], []);\n            while(i < left.length && j < right.length){\n                comparisons++;\n                record(11, {\n                    start,\n                    mid,\n                    end,\n                    i,\n                    j,\n                    k,\n                    left: [\n                        ...left\n                    ],\n                    right: [\n                        ...right\n                    ]\n                }, \"Compare left[\".concat(i, \"] <= right[\").concat(j, \"] (\").concat(left[i], \" <= \").concat(right[j], \")\"), [\n                    k\n                ], []);\n                if (left[i] <= right[j]) {\n                    arr[k] = left[i];\n                    i++;\n                    record(12, {\n                        k,\n                        i,\n                        j,\n                        arr: [\n                            ...arr\n                        ]\n                    }, \"left[\".concat(i - 1, \"] <= right[\").concat(j, \"], arr[\").concat(k, \"] = \").concat(arr[k]), [\n                        k\n                    ], []);\n                } else {\n                    arr[k] = right[j];\n                    j++;\n                    record(14, {\n                        k,\n                        i,\n                        j,\n                        arr: [\n                            ...arr\n                        ]\n                    }, \"left[\".concat(i, \"] > right[\").concat(j - 1, \"], arr[\").concat(k, \"] = \").concat(arr[k]), [\n                        k\n                    ], []);\n                }\n                k++;\n            }\n            while(i < left.length){\n                arr[k] = left[i];\n                i++;\n                k++;\n                record(17, {\n                    k,\n                    i,\n                    j,\n                    arr: [\n                        ...arr\n                    ]\n                }, \"Copy remaining left\", [\n                    k - 1\n                ], []);\n            }\n            while(j < right.length){\n                arr[k] = right[j];\n                j++;\n                k++;\n                record(19, {\n                    k,\n                    i,\n                    j,\n                    arr: [\n                        ...arr\n                    ]\n                }, \"Copy remaining right\", [\n                    k - 1\n                ], []);\n            }\n            // Optionally, mark sorted indices for this merge\n            record(20, {\n                start,\n                end\n            }, \"Merged [\".concat(start, \", \").concat(end, \"]\"), [], Array.from({\n                length: end - start + 1\n            }, (_, idx)=>start + idx));\n        }\n        mergeSort(0, arr.length - 1);\n        return steps;\n    };\n    const generateSelectionSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const steps = [];\n        let comparisons = 0;\n        let swaps = 0;\n        const n = arr.length;\n        let sorted = [];\n        steps.push({\n            line: 0,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            j: undefined,\n            minIdx: undefined,\n            comparing: [],\n            sorted: [],\n            desc: \"Start\",\n            comparisons,\n            swaps\n        });\n        for(let i = 0; i < n - 1; i++){\n            let minIdx = i;\n            steps.push({\n                line: 1,\n                arr: [\n                    ...arr\n                ],\n                i,\n                minIdx,\n                comparing: [\n                    i\n                ],\n                sorted: [\n                    ...sorted\n                ],\n                desc: \"Start i=\".concat(i),\n                comparisons,\n                swaps\n            });\n            for(let j = i + 1; j < n; j++){\n                comparisons++;\n                steps.push({\n                    line: 3,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    j,\n                    minIdx,\n                    comparing: [\n                        j,\n                        minIdx\n                    ],\n                    sorted: [\n                        ...sorted\n                    ],\n                    desc: \"Compare arr[\".concat(j, \"] < arr[\").concat(minIdx, \"] (\").concat(arr[j], \" < \").concat(arr[minIdx], \")\"),\n                    comparisons,\n                    swaps\n                });\n                if (arr[j] < arr[minIdx]) {\n                    minIdx = j;\n                    steps.push({\n                        line: 5,\n                        arr: [\n                            ...arr\n                        ],\n                        i,\n                        j,\n                        minIdx,\n                        comparing: [\n                            j,\n                            minIdx\n                        ],\n                        sorted: [\n                            ...sorted\n                        ],\n                        desc: \"Update minIdx = \".concat(minIdx),\n                        comparisons,\n                        swaps\n                    });\n                }\n            }\n            if (minIdx !== i) {\n                [arr[i], arr[minIdx]] = [\n                    arr[minIdx],\n                    arr[i]\n                ];\n                swaps++;\n                steps.push({\n                    line: 9,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    minIdx,\n                    comparing: [\n                        i,\n                        minIdx\n                    ],\n                    sorted: [\n                        ...sorted,\n                        i\n                    ],\n                    desc: \"Swap arr[\".concat(i, \"] and arr[\").concat(minIdx, \"]\"),\n                    comparisons,\n                    swaps\n                });\n            }\n            sorted.push(i);\n            steps.push({\n                line: 11,\n                arr: [\n                    ...arr\n                ],\n                i,\n                minIdx,\n                comparing: [],\n                sorted: [\n                    ...sorted\n                ],\n                desc: \"Mark sorted: \".concat(i),\n                comparisons,\n                swaps\n            });\n        }\n        sorted = Array.from({\n            length: n\n        }, (_, k)=>k);\n        steps.push({\n            line: 12,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            minIdx: undefined,\n            comparing: [],\n            sorted: [\n                ...sorted\n            ],\n            desc: \"Done\",\n            comparisons,\n            swaps\n        });\n        return steps;\n    };\n    const generateInsertionSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const steps = [];\n        let comparisons = 0;\n        let swaps = 0;\n        const n = arr.length;\n        let sorted = [\n            0\n        ];\n        steps.push({\n            line: 0,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            j: undefined,\n            key: undefined,\n            comparing: [],\n            sorted: [],\n            desc: \"Start\",\n            comparisons,\n            swaps\n        });\n        for(let i = 1; i < n; i++){\n            let key = arr[i];\n            let j = i - 1;\n            steps.push({\n                line: 2,\n                arr: [\n                    ...arr\n                ],\n                i,\n                j,\n                key,\n                comparing: [\n                    i\n                ],\n                sorted: [\n                    ...sorted\n                ],\n                desc: \"Select key = arr[\".concat(i, \"] = \").concat(key),\n                comparisons,\n                swaps\n            });\n            while(j >= 0 && arr[j] > key){\n                comparisons++;\n                steps.push({\n                    line: 4,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    j,\n                    key,\n                    comparing: [\n                        j,\n                        j + 1\n                    ],\n                    sorted: [\n                        ...sorted\n                    ],\n                    desc: \"Compare arr[\".concat(j, \"] > key (\").concat(arr[j], \" > \").concat(key, \")\"),\n                    comparisons,\n                    swaps\n                });\n                arr[j + 1] = arr[j];\n                swaps++;\n                steps.push({\n                    line: 5,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    j,\n                    key,\n                    comparing: [\n                        j,\n                        j + 1\n                    ],\n                    sorted: [\n                        ...sorted\n                    ],\n                    desc: \"Move arr[\".concat(j, \"] to arr[\").concat(j + 1, \"]\"),\n                    comparisons,\n                    swaps\n                });\n                j = j - 1;\n                steps.push({\n                    line: 6,\n                    arr: [\n                        ...arr\n                    ],\n                    i,\n                    j,\n                    key,\n                    comparing: [\n                        j\n                    ],\n                    sorted: [\n                        ...sorted\n                    ],\n                    desc: \"j--\",\n                    comparisons,\n                    swaps\n                });\n            }\n            steps.push({\n                line: 8,\n                arr: [\n                    ...arr\n                ],\n                i,\n                j,\n                key,\n                comparing: [\n                    j + 1\n                ],\n                sorted: [\n                    ...sorted\n                ],\n                desc: \"Insert key at arr[\".concat(j + 1, \"]\"),\n                comparisons,\n                swaps\n            });\n            arr[j + 1] = key;\n            sorted = Array.from({\n                length: i + 1\n            }, (_, k)=>k);\n            steps.push({\n                line: 9,\n                arr: [\n                    ...arr\n                ],\n                i,\n                j,\n                key,\n                comparing: [],\n                sorted: [\n                    ...sorted\n                ],\n                desc: \"Mark sorted: 0..\".concat(i),\n                comparisons,\n                swaps\n            });\n        }\n        sorted = Array.from({\n            length: n\n        }, (_, k)=>k);\n        steps.push({\n            line: 10,\n            arr: [\n                ...arr\n            ],\n            i: undefined,\n            j: undefined,\n            key: undefined,\n            comparing: [],\n            sorted: [\n                ...sorted\n            ],\n            desc: \"Done\",\n            comparisons,\n            swaps\n        });\n        return steps;\n    };\n    const generateHeapSortSteps = (inputArr)=>{\n        const arr = [\n            ...inputArr\n        ];\n        const steps = [];\n        let comparisons = 0;\n        let swaps = 0;\n        let n = arr.length;\n        function heapify(n, i) {\n            let largest = i;\n            let l = 2 * i + 1;\n            let r = 2 * i + 2;\n            if (l < n) {\n                comparisons++;\n                steps.push({\n                    line: 15,\n                    arr: [\n                        ...arr\n                    ],\n                    n,\n                    i,\n                    l,\n                    r,\n                    largest,\n                    comparing: [\n                        l,\n                        largest\n                    ],\n                    sorted: [],\n                    desc: \"Compare arr[\".concat(l, \"] > arr[\").concat(largest, \"] (\").concat(arr[l], \" > \").concat(arr[largest], \")\"),\n                    comparisons,\n                    swaps\n                });\n                if (arr[l] > arr[largest]) largest = l;\n            }\n            if (r < n) {\n                comparisons++;\n                steps.push({\n                    line: 16,\n                    arr: [\n                        ...arr\n                    ],\n                    n,\n                    i,\n                    l,\n                    r,\n                    largest,\n                    comparing: [\n                        r,\n                        largest\n                    ],\n                    sorted: [],\n                    desc: \"Compare arr[\".concat(r, \"] > arr[\").concat(largest, \"] (\").concat(arr[r], \" > \").concat(arr[largest], \")\"),\n                    comparisons,\n                    swaps\n                });\n                if (arr[r] > arr[largest]) largest = r;\n            }\n            if (largest !== i) {\n                [arr[i], arr[largest]] = [\n                    arr[largest],\n                    arr[i]\n                ];\n                swaps++;\n                steps.push({\n                    line: 19,\n                    arr: [\n                        ...arr\n                    ],\n                    n,\n                    i,\n                    l,\n                    r,\n                    largest,\n                    comparing: [\n                        i,\n                        largest\n                    ],\n                    sorted: [],\n                    desc: \"Swap arr[\".concat(i, \"] and arr[\").concat(largest, \"]\"),\n                    comparisons,\n                    swaps\n                });\n                heapify(n, largest);\n            }\n        }\n        for(let i = Math.floor(n / 2) - 1; i >= 0; i--){\n            steps.push({\n                line: 3,\n                arr: [\n                    ...arr\n                ],\n                n,\n                i,\n                comparing: [\n                    i\n                ],\n                sorted: [],\n                desc: \"Heapify at i=\".concat(i),\n                comparisons,\n                swaps\n            });\n            heapify(n, i);\n        }\n        for(let i = n - 1; i > 0; i--){\n            [arr[0], arr[i]] = [\n                arr[i],\n                arr[0]\n            ];\n            swaps++;\n            steps.push({\n                line: 7,\n                arr: [\n                    ...arr\n                ],\n                n,\n                i,\n                comparing: [\n                    0,\n                    i\n                ],\n                sorted: Array.from({\n                    length: n - i\n                }, (_, k)=>n - 1 - k),\n                desc: \"Swap arr[0] and arr[\".concat(i, \"]\"),\n                comparisons,\n                swaps\n            });\n            heapify(i, 0);\n        }\n        steps.push({\n            line: 10,\n            arr: [\n                ...arr\n            ],\n            n,\n            i: undefined,\n            comparing: [],\n            sorted: Array.from({\n                length: arr.length\n            }, (_, k)=>k),\n            desc: \"Done\",\n            comparisons,\n            swaps\n        });\n        return steps;\n    };\n    // Stepper controls for Bubble Sort\n    const handleStepNext = ()=>{\n        if (currentStepIdx < steps.length - 1) setCurrentStepIdx(currentStepIdx + 1);\n    };\n    const handleStepPrev = ()=>{\n        if (currentStepIdx > 0) setCurrentStepIdx(currentStepIdx - 1);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let timer;\n        if (isAutoPlaying && steps.length > 0 && currentStepIdx < steps.length - 1) {\n            timer = setTimeout(()=>setCurrentStepIdx((idx)=>idx + 1), 1000);\n        }\n        if (currentStepIdx === steps.length - 1) setIsAutoPlaying(false);\n        return ()=>clearTimeout(timer);\n    }, [\n        isAutoPlaying,\n        currentStepIdx,\n        steps.length\n    ]);\n    const handleAutoPlay = ()=>setIsAutoPlaying(true);\n    const handlePause = ()=>setIsAutoPlaying(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        reset();\n    }, [\n        selectedAlgorithm\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        isPlayingRef.current = isPlaying;\n    }, [\n        isPlaying\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                algorithms: algorithms,\n                selectedAlgorithm: selectedAlgorithm,\n                setSelectedAlgorithm: setSelectedAlgorithm\n            }, void 0, false, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                lineNumber: 698,\n                columnNumber: 7\n            }, this),\n            !selectedAlgorithm ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center text-gray-400 py-8\",\n                children: \"Vui l\\xf2ng chọn một thuật to\\xe1n sắp xếp để bắt đầu.\"\n            }, void 0, false, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                lineNumber: 705,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid lg:grid-cols-2 gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_VisualizationArea__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                array: steps.length > 0 ? steps[currentStepIdx].arr : array,\n                                comparingIndices: steps.length > 0 ? steps[currentStepIdx].comparing : comparingIndices,\n                                sortedIndices: steps.length > 0 ? steps[currentStepIdx].sorted : sortedIndices,\n                                type: \"sorting\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 709,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col items-center space-y-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ControlPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                        isPlaying: isPlaying,\n                                        onPlay: play,\n                                        onPause: handlePause,\n                                        onReset: reset,\n                                        onGenerateArray: generateRandomArray\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 716,\n                                        columnNumber: 15\n                                    }, this),\n                                    steps.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2 mt-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handleStepPrev,\n                                                disabled: currentStepIdx === 0,\n                                                className: \"px-2 py-1 bg-gray-600 rounded text-white\",\n                                                children: \"Prev\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 726,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-gray-200\",\n                                                children: [\n                                                    \"Step \",\n                                                    currentStepIdx + 1,\n                                                    \" / \",\n                                                    steps.length\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 727,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handleStepNext,\n                                                disabled: currentStepIdx === steps.length - 1,\n                                                className: \"px-2 py-1 bg-gray-600 rounded text-white\",\n                                                children: \"Next\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 728,\n                                                columnNumber: 19\n                                            }, this),\n                                            !isAutoPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handleAutoPlay,\n                                                disabled: currentStepIdx === steps.length - 1,\n                                                className: \"px-2 py-1 bg-green-600 rounded text-white\",\n                                                children: \"Auto\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 730,\n                                                columnNumber: 21\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handlePause,\n                                                className: \"px-2 py-1 bg-orange-600 rounded text-white\",\n                                                children: \"Pause\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 732,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 725,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 715,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                        lineNumber: 708,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-4\",\n                        children: [\n                            steps.length > 0 ? selectedAlgorithm === \"bubble\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: bubbleSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 745,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 743,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 750,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"i: \",\n                                            steps[currentStepIdx].i !== undefined ? steps[currentStepIdx].i : \"-\",\n                                            \", j: \",\n                                            steps[currentStepIdx].j !== undefined ? steps[currentStepIdx].j : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 751,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 742,\n                                columnNumber: 17\n                            }, this) : selectedAlgorithm === \"quick\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: quickSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 757,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 755,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 762,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"low: \",\n                                            steps[currentStepIdx].low !== undefined ? steps[currentStepIdx].low : \"-\",\n                                            \", high: \",\n                                            steps[currentStepIdx].high !== undefined ? steps[currentStepIdx].high : \"-\",\n                                            \", i: \",\n                                            steps[currentStepIdx].i !== undefined ? steps[currentStepIdx].i : \"-\",\n                                            \", j: \",\n                                            steps[currentStepIdx].j !== undefined ? steps[currentStepIdx].j : \"-\",\n                                            \", pivot: \",\n                                            steps[currentStepIdx].pivot !== undefined ? steps[currentStepIdx].pivot : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 763,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 754,\n                                columnNumber: 17\n                            }, this) : selectedAlgorithm === \"merge\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: mergeSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 769,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 767,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 774,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"start: \",\n                                            steps[currentStepIdx].start !== undefined ? steps[currentStepIdx].start : \"-\",\n                                            \", end: \",\n                                            steps[currentStepIdx].end !== undefined ? steps[currentStepIdx].end : \"-\",\n                                            \", mid: \",\n                                            steps[currentStepIdx].mid !== undefined ? steps[currentStepIdx].mid : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 775,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 766,\n                                columnNumber: 17\n                            }, this) : selectedAlgorithm === \"insertion\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: insertionSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 781,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 779,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 786,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"i: \",\n                                            steps[currentStepIdx].i !== undefined ? steps[currentStepIdx].i : \"-\",\n                                            \", j: \",\n                                            steps[currentStepIdx].j !== undefined ? steps[currentStepIdx].j : \"-\",\n                                            \", key: \",\n                                            steps[currentStepIdx].key !== undefined ? steps[currentStepIdx].key : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 787,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 778,\n                                columnNumber: 17\n                            }, this) : selectedAlgorithm === \"selection\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: selectionSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 793,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 791,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 798,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"i: \",\n                                            steps[currentStepIdx].i !== undefined ? steps[currentStepIdx].i : \"-\",\n                                            \", j: \",\n                                            steps[currentStepIdx].j !== undefined ? steps[currentStepIdx].j : \"-\",\n                                            \", minIdx: \",\n                                            steps[currentStepIdx].minIdx !== undefined ? steps[currentStepIdx].minIdx : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 799,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 790,\n                                columnNumber: 17\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: heapSortLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 805,\n                                                columnNumber: 23\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 803,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 810,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"i: \",\n                                            steps[currentStepIdx].i !== undefined ? steps[currentStepIdx].i : \"-\",\n                                            \", n: \",\n                                            steps[currentStepIdx].n !== undefined ? steps[currentStepIdx].n : \"-\",\n                                            \", largest: \",\n                                            steps[currentStepIdx].largest !== undefined ? steps[currentStepIdx].largest : \"-\",\n                                            \", arr: [\",\n                                            steps[currentStepIdx].arr.join(\", \"),\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 811,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 802,\n                                columnNumber: 17\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CodeDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                code: getAlgorithmCode(),\n                                language: \"javascript\",\n                                title: ((_algorithms_find = algorithms.find((a)=>a.id === selectedAlgorithm)) === null || _algorithms_find === void 0 ? void 0 : _algorithms_find.name) || \"\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 815,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-700 rounded-lg p-4 text-gray-100\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg mb-2\",\n                                        children: \"Sorting Output\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 823,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Original array: \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-blue-300\",\n                                                children: [\n                                                    \"[\",\n                                                    array.join(\", \"),\n                                                    \"]\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 824,\n                                                columnNumber: 53\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 824,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Sorted array: \",\n                                            steps.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-green-400 font-semibold\",\n                                                children: [\n                                                    \"[\",\n                                                    steps[currentStepIdx].arr.join(\", \"),\n                                                    \"]\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 826,\n                                                columnNumber: 17\n                                            }, this) : finalSorted ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-green-400 font-semibold\",\n                                                children: [\n                                                    \"[\",\n                                                    finalSorted.join(\", \"),\n                                                    \"]\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 828,\n                                                columnNumber: 17\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-gray-400\",\n                                                children: \"Not sorted yet.\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 830,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                        lineNumber: 825,\n                                        columnNumber: 15\n                                    }, this),\n                                    steps.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mb-2\",\n                                                children: [\n                                                    \"Comparisons: \",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-yellow-300\",\n                                                        children: steps[currentStepIdx].comparisons !== undefined ? steps[currentStepIdx].comparisons : \"-\"\n                                                    }, void 0, false, {\n                                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                        lineNumber: 834,\n                                                        columnNumber: 54\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 834,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mb-2\",\n                                                children: [\n                                                    \"Swaps: \",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-yellow-300\",\n                                                        children: steps[currentStepIdx].swaps !== undefined ? steps[currentStepIdx].swaps : \"-\"\n                                                    }, void 0, false, {\n                                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                        lineNumber: 835,\n                                                        columnNumber: 48\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 835,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mb-2\",\n                                                children: [\n                                                    \"Comparisons: \",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-yellow-300\",\n                                                        children: numComparisons\n                                                    }, void 0, false, {\n                                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                        lineNumber: 839,\n                                                        columnNumber: 54\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 839,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mb-2\",\n                                                children: [\n                                                    \"Swaps: \",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-yellow-300\",\n                                                        children: numSwaps\n                                                    }, void 0, false, {\n                                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                        lineNumber: 840,\n                                                        columnNumber: 48\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                                lineNumber: 840,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                                lineNumber: 822,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                        lineNumber: 738,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n                lineNumber: 707,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\SortingAlgorithms.tsx\",\n        lineNumber: 697,\n        columnNumber: 5\n    }, this);\n}\n_s(SortingAlgorithms, \"Jh61OWiIFpbuo0vyNE943ibDL5g=\");\n_c = SortingAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"SortingAlgorithms\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/algorithms/SortingAlgorithms.tsx\n"));

/***/ })

});