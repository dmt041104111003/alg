"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx":
/*!***************************************************!*\
  !*** ./components/algorithms/GraphAlgorithms.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GraphAlgorithms; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AlgorithmSelector */ \"(app-pages-browser)/./components/AlgorithmSelector.tsx\");\n/* harmony import */ var _GraphVisualization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../GraphVisualization */ \"(app-pages-browser)/./components/GraphVisualization.tsx\");\n/* harmony import */ var _CodeDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CodeDisplay */ \"(app-pages-browser)/./components/CodeDisplay.tsx\");\n/* harmony import */ var _ControlPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ControlPanel */ \"(app-pages-browser)/./components/ControlPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction GraphAlgorithms() {\n    var _algorithms_find;\n    _s();\n    const [selectedAlgorithm, setSelectedAlgorithm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"dfs\");\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isPlayingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"A\",\n            x: 150,\n            y: 100,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"B\",\n            x: 100,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"C\",\n            x: 200,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"D\",\n            x: 50,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"E\",\n            x: 150,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"F\",\n            x: 250,\n            y: 300,\n            visited: false,\n            current: false\n        }\n    ]);\n    const [edges] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            from: \"A\",\n            to: \"B\",\n            weight: 2\n        },\n        {\n            from: \"A\",\n            to: \"C\",\n            weight: 1\n        },\n        {\n            from: \"B\",\n            to: \"D\",\n            weight: 3\n        },\n        {\n            from: \"B\",\n            to: \"E\",\n            weight: 1\n        },\n        {\n            from: \"C\",\n            to: \"E\",\n            weight: 4\n        },\n        {\n            from: \"C\",\n            to: \"F\",\n            weight: 8\n        },\n        {\n            from: \"E\",\n            to: \"F\",\n            weight: 2\n        }\n    ]);\n    const algorithms = [\n        {\n            id: \"dfs\",\n            name: \"Depth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"bfs\",\n            name: \"Breadth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"dijkstra\",\n            name: \"Dijkstra's Algorithm\",\n            complexity: \"O((V + E) log V)\"\n        }\n    ];\n    const dfsCode = \"function dfs(graph, startNode, visited = new Set()) {\\n  console.log(startNode); // Process current node\\n  visited.add(startNode);\\n  \\n  // Visit all unvisited neighbors\\n  for (const neighbor of graph[startNode]) {\\n    if (!visited.has(neighbor)) {\\n      dfs(graph, neighbor, visited);\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\ndfs(graph, 'A');\";\n    const bfsCode = \"function bfs(graph, startNode) {\\n  const visited = new Set();\\n  const queue = [startNode];\\n  \\n  visited.add(startNode);\\n  \\n  while (queue.length > 0) {\\n    const currentNode = queue.shift();\\n    console.log(currentNode); // Process current node\\n    \\n    // Add all unvisited neighbors to queue\\n    for (const neighbor of graph[currentNode]) {\\n      if (!visited.has(neighbor)) {\\n        visited.add(neighbor);\\n        queue.push(neighbor);\\n      }\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\nbfs(graph, 'A');\";\n    const dijkstraCode = \"function dijkstra(graph, start) {\\n  const distances = {};\\n  const visited = new Set();\\n  const pq = [];\\n  for (const node in graph) {\\n    distances[node] = Infinity;\\n  }\\n  distances[start] = 0;\\n  pq.push({ node: start, dist: 0 });\\n  while (pq.length > 0) {\\n    pq.sort((a, b) => a.dist - b.dist);\\n    const { node: current } = pq.shift();\\n    if (visited.has(current)) continue;\\n    visited.add(current);\\n    for (const neighbor of graph[current]) {\\n      if (distances[current] + 1 < distances[neighbor]) {\\n        distances[neighbor] = distances[current] + 1;\\n        pq.push({ node: neighbor, dist: distances[neighbor] });\\n      }\\n    }\\n  }\\n  return distances;\\n}\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\ndijkstra(graph, 'A');\";\n    const getAlgorithmCode = ()=>{\n        switch(selectedAlgorithm){\n            case \"dfs\":\n                return dfsCode;\n            case \"bfs\":\n                return bfsCode;\n            case \"dijkstra\":\n                return dijkstraCode;\n            default:\n                return dfsCode;\n        }\n    };\n    const getAdjacencyList = ()=>{\n        const adjacencyList = {};\n        nodes.forEach((node)=>{\n            adjacencyList[node.id] = [];\n        });\n        edges.forEach((edge)=>{\n            adjacencyList[edge.from].push(edge.to);\n            adjacencyList[edge.to].push(edge.from);\n        });\n        return adjacencyList;\n    };\n    const sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n    const reset = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n        setNodes(nodes.map((node)=>({\n                ...node,\n                visited: false,\n                current: false\n            })));\n    };\n    const dfsTraversal = async (nodeId, visited, adjacencyList)=>{\n        if (!isPlayingRef.current || visited.has(nodeId)) return;\n        visited.add(nodeId);\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: node.id === nodeId,\n                    visited: visited.has(node.id)\n                })));\n        await sleep(1500);\n        if (!isPlayingRef.current) return;\n        for (const neighbor of adjacencyList[nodeId]){\n            if (!visited.has(neighbor) && isPlayingRef.current) {\n                await dfsTraversal(neighbor, visited, adjacencyList);\n            }\n        }\n        if (isPlayingRef.current) {\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: false\n                    })));\n        }\n    };\n    const bfsTraversal = async ()=>{\n        const visited = new Set();\n        const queue = [\n            \"A\"\n        ];\n        visited.add(\"A\");\n        while(queue.length > 0 && isPlayingRef.current){\n            const currentNode = queue.shift();\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: node.id === currentNode,\n                        visited: visited.has(node.id)\n                    })));\n            await sleep(1500);\n            if (!isPlayingRef.current) break;\n            const adjacencyList = getAdjacencyList();\n            for (const neighbor of adjacencyList[currentNode]){\n                if (!visited.has(neighbor)) {\n                    visited.add(neighbor);\n                    queue.push(neighbor);\n                }\n            }\n        }\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: false\n                })));\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    // Dijkstra visualization logic\n    const dijkstraTraversal = async ()=>{\n        const adjacencyList = getAdjacencyList();\n        const distances = {};\n        const prev = {};\n        const visited = new Set();\n        const pq = [];\n        nodes.forEach((node)=>{\n            distances[node.id] = Infinity;\n            prev[node.id] = null;\n        });\n        distances[\"A\"] = 0;\n        pq.push({\n            node: \"A\",\n            dist: 0\n        });\n        while(pq.length > 0 && isPlayingRef.current){\n            pq.sort((a, b)=>a.dist - b.dist);\n            const { node: current } = pq.shift();\n            if (visited.has(current)) continue;\n            visited.add(current);\n            setNodes((prevNodes)=>prevNodes.map((n)=>({\n                        ...n,\n                        current: n.id === current,\n                        visited: visited.has(n.id)\n                    })));\n            await sleep(1200);\n            for (const neighbor of adjacencyList[current]){\n                if (distances[current] + 1 < distances[neighbor]) {\n                    distances[neighbor] = distances[current] + 1;\n                    prev[neighbor] = current;\n                    pq.push({\n                        node: neighbor,\n                        dist: distances[neighbor]\n                    });\n                }\n            }\n        }\n        // Highlight shortest path from A to F (as example)\n        let path = [];\n        let curr = \"F\";\n        while(curr && prev[curr]){\n            path.unshift([\n                prev[curr],\n                curr\n            ]);\n            curr = prev[curr];\n        }\n        setNodes((prevNodes)=>prevNodes.map((n)=>({\n                    ...n,\n                    current: false,\n                    visited: visited.has(n.id) || n.id === \"A\" || n.id === \"F\"\n                })));\n        // Optionally, you can highlight edges in the path\n        // ...\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const play = async ()=>{\n        if (isPlaying) return;\n        setIsPlaying(true);\n        isPlayingRef.current = true;\n        reset();\n        await sleep(100);\n        isPlayingRef.current = true;\n        if (selectedAlgorithm === \"dfs\") {\n            const adjacencyList = getAdjacencyList();\n            await dfsTraversal(\"A\", new Set(), adjacencyList);\n        } else if (selectedAlgorithm === \"bfs\") {\n            await bfsTraversal();\n        } else if (selectedAlgorithm === \"dijkstra\") {\n            await dijkstraTraversal();\n        }\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const pause = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        reset();\n    }, [\n        selectedAlgorithm\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        isPlayingRef.current = isPlaying;\n    }, [\n        isPlaying\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                algorithms: algorithms,\n                selectedAlgorithm: selectedAlgorithm,\n                setSelectedAlgorithm: setSelectedAlgorithm\n            }, void 0, false, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 337,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid lg:grid-cols-2 gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GraphVisualization__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                nodes: nodes,\n                                edges: edges\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 345,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ControlPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                isPlaying: isPlaying,\n                                onPlay: play,\n                                onPause: pause,\n                                onReset: reset,\n                                hideGenerateArray: true\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 350,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 344,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CodeDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        code: getAlgorithmCode(),\n                        language: \"javascript\",\n                        title: ((_algorithms_find = algorithms.find((a)=>a.id === selectedAlgorithm)) === null || _algorithms_find === void 0 ? void 0 : _algorithms_find.name) || \"\"\n                    }, void 0, false, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 359,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 343,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n        lineNumber: 336,\n        columnNumber: 5\n    }, this);\n}\n_s(GraphAlgorithms, \"UNkwqihGc4BA6IzUp9HZPo/Cfow=\");\n_c = GraphAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"GraphAlgorithms\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx\n"));

/***/ })

});