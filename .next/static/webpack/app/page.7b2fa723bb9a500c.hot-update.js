"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx":
/*!***************************************************!*\
  !*** ./components/algorithms/GraphAlgorithms.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GraphAlgorithms; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../AlgorithmSelector */ \"(app-pages-browser)/./components/AlgorithmSelector.tsx\");\n/* harmony import */ var _GraphVisualization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../GraphVisualization */ \"(app-pages-browser)/./components/GraphVisualization.tsx\");\n/* harmony import */ var _CodeDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CodeDisplay */ \"(app-pages-browser)/./components/CodeDisplay.tsx\");\n/* harmony import */ var _ControlPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ControlPanel */ \"(app-pages-browser)/./components/ControlPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction GraphAlgorithms() {\n    var _steps_currentStepIdx_visited, _steps_currentStepIdx_order, _steps_currentStepIdx_queue, _steps_currentStepIdx_visited1, _steps_currentStepIdx_order1, _steps_currentStepIdx_pq, _algorithms_find, _steps_currentStepIdx_desc, _steps_currentStepIdx, _steps_currentStepIdx1, _steps_currentStepIdx_visited2, _steps_currentStepIdx2, _steps_currentStepIdx_pq1, _steps_currentStepIdx3, _steps_currentStepIdx4, _steps_currentStepIdx_desc1, _steps_currentStepIdx5, _steps_currentStepIdx_desc2, _steps_currentStepIdx6;\n    _s();\n    const [selectedAlgorithm, setSelectedAlgorithm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"dfs\");\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isPlayingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"A\",\n            x: 150,\n            y: 100,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"B\",\n            x: 100,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"C\",\n            x: 200,\n            y: 200,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"D\",\n            x: 50,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"E\",\n            x: 150,\n            y: 300,\n            visited: false,\n            current: false\n        },\n        {\n            id: \"F\",\n            x: 250,\n            y: 300,\n            visited: false,\n            current: false\n        }\n    ]);\n    const nodeIds = nodes.map((n)=>n.id);\n    const [startNode, setStartNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"A\");\n    const [endNode, setEndNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"F\");\n    const [shortestPath, setShortestPath] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [distances, setDistances] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [traversalOrder, setTraversalOrder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [steps, setSteps] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentStepIdx, setCurrentStepIdx] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoPlaying, setIsAutoPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [edges] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            from: \"A\",\n            to: \"B\",\n            weight: 2\n        },\n        {\n            from: \"A\",\n            to: \"C\",\n            weight: 1\n        },\n        {\n            from: \"B\",\n            to: \"D\",\n            weight: 3\n        },\n        {\n            from: \"B\",\n            to: \"E\",\n            weight: 1\n        },\n        {\n            from: \"C\",\n            to: \"E\",\n            weight: 4\n        },\n        {\n            from: \"C\",\n            to: \"F\",\n            weight: 8\n        },\n        {\n            from: \"E\",\n            to: \"F\",\n            weight: 2\n        }\n    ]);\n    const algorithms = [\n        {\n            id: \"dfs\",\n            name: \"Depth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"bfs\",\n            name: \"Breadth-First Search\",\n            complexity: \"O(V + E)\"\n        },\n        {\n            id: \"dijkstra\",\n            name: \"Dijkstra's Algorithm\",\n            complexity: \"O((V + E) log V)\"\n        },\n        {\n            id: \"bellman\",\n            name: \"Bellman-Ford\",\n            complexity: \"O(VE)\"\n        },\n        {\n            id: \"greedy\",\n            name: \"Greedy Best-First Search\",\n            complexity: \"O(E log V)\"\n        }\n    ];\n    const dfsCode = \"function dfs(graph, startNode, visited = new Set()) {\\n  console.log(startNode); // Process current node\\n  visited.add(startNode);\\n  \\n  // Visit all unvisited neighbors\\n  for (const neighbor of graph[startNode]) {\\n    if (!visited.has(neighbor)) {\\n      dfs(graph, neighbor, visited);\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\ndfs(graph, 'A');\";\n    const bfsCode = \"function bfs(graph, startNode) {\\n  const visited = new Set();\\n  const queue = [startNode];\\n  \\n  visited.add(startNode);\\n  \\n  while (queue.length > 0) {\\n    const currentNode = queue.shift();\\n    console.log(currentNode); // Process current node\\n    \\n    // Add all unvisited neighbors to queue\\n    for (const neighbor of graph[currentNode]) {\\n      if (!visited.has(neighbor)) {\\n        visited.add(neighbor);\\n        queue.push(neighbor);\\n      }\\n    }\\n  }\\n}\\n\\n// Usage\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'E', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'C', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\nbfs(graph, 'A');\";\n    const dijkstraCode = \"function dijkstra(graph, start) {\\n  const distances = {};\\n  const prev = {};\\n  const pq = [];\\n  for (const node in graph) {\\n    distances[node] = Infinity;\\n    prev[node] = null;\\n  }\\n  distances[start] = 0;\\n  pq.push({ node: start, dist: 0 });\\n  while (pq.length > 0) {\\n    pq.sort((a, b) => a.dist - b.dist);\\n    const { node: current } = pq.shift();\\n    for (const neighbor of graph[current]) {\\n      const { to, weight } = neighbor;\\n      if (distances[current] + weight < distances[to]) {\\n        distances[to] = distances[current] + weight;\\n        prev[to] = current;\\n        pq.push({ node: to, dist: distances[to] });\\n      }\\n    }\\n  }\\n  return { distances, prev };\\n}\\n// Usage\\nconst graph = {\\n  'A': [{ to: 'B', weight: 2 }, { to: 'C', weight: 1 }],\\n  'B': [{ to: 'A', weight: 2 }, { to: 'D', weight: 3 }, { to: 'E', weight: 1 }],\\n  'C': [{ to: 'A', weight: 1 }, { to: 'E', weight: 4 }, { to: 'F', weight: 8 }],\\n  'D': [{ to: 'B', weight: 3 }],\\n  'E': [{ to: 'B', weight: 1 }, { to: 'C', weight: 4 }, { to: 'F', weight: 2 }],\\n  'F': [{ to: 'C', weight: 8 }, { to: 'E', weight: 2 }]\\n};\\ndijkstra(graph, 'A');\";\n    const bellmanFordLines = [\n        \"function bellmanFord(graph, start) {\",\n        \"  const distances = {};\",\n        \"  for (const node in graph) {\",\n        \"    distances[node] = Infinity;\",\n        \"  }\",\n        \"  distances[start] = 0;\",\n        \"  for (let i = 0; i < V - 1; i++) {\",\n        \"    for (const edge of edges) {\",\n        \"      if (distances[edge.from] + edge.weight < distances[edge.to]) {\",\n        \"        distances[edge.to] = distances[edge.from] + edge.weight;\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"  // Check for negative cycles\",\n        \"  for (const edge of edges) {\",\n        \"    if (distances[edge.from] + edge.weight < distances[edge.to]) {\",\n        '      return \"Negative cycle detected\";',\n        \"    }\",\n        \"  }\",\n        \"  return distances;\",\n        \"}\"\n    ];\n    const greedyLines = [\n        \"function greedyBestFirst(graph, start, goal, heuristic) {\",\n        \"  const visited = new Set();\",\n        \"  const pq = [{ node: start, h: heuristic[start] }];\",\n        \"  while (pq.length > 0) {\",\n        \"    pq.sort((a, b) => a.h - b.h);\",\n        \"    const { node } = pq.shift();\",\n        \"    if (node === goal) return true;\",\n        \"    visited.add(node);\",\n        \"    for (const neighbor of graph[node]) {\",\n        \"      if (!visited.has(neighbor)) {\",\n        \"        pq.push({ node: neighbor, h: heuristic[neighbor] });\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"  return false;\",\n        \"}\"\n    ];\n    const getAlgorithmCode = ()=>{\n        switch(selectedAlgorithm){\n            case \"dfs\":\n                return dfsCode;\n            case \"bfs\":\n                return bfsCode;\n            case \"dijkstra\":\n                return dijkstraCode;\n            case \"bellman\":\n                return bellmanFordLines.join(\"\\n\");\n            case \"greedy\":\n                return greedyLines.join(\"\\n\");\n            default:\n                return dfsCode;\n        }\n    };\n    const getAdjacencyList = ()=>{\n        const adjacencyList = {};\n        nodes.forEach((node)=>{\n            adjacencyList[node.id] = [];\n        });\n        edges.forEach((edge)=>{\n            adjacencyList[edge.from].push({\n                to: edge.to,\n                weight: edge.weight\n            });\n            adjacencyList[edge.to].push({\n                to: edge.from,\n                weight: edge.weight\n            });\n        });\n        return adjacencyList;\n    };\n    const sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n    const dfsLines = [\n        \"function dfs(graph, startNode, visited = new Set()) {\",\n        \"  console.log(startNode); // Process current node\",\n        \"  visited.add(startNode);\",\n        \"  \",\n        \"  // Visit all unvisited neighbors\",\n        \"  for (const neighbor of graph[startNode]) {\",\n        \"    if (!visited.has(neighbor)) {\",\n        \"      dfs(graph, neighbor, visited);\",\n        \"    }\",\n        \"  }\",\n        \"}\"\n    ];\n    const bfsLines = [\n        \"function bfs(graph, startNode) {\",\n        \"  const visited = new Set();\",\n        \"  const queue = [startNode];\",\n        \"  \",\n        \"  visited.add(startNode);\",\n        \"  \",\n        \"  while (queue.length > 0) {\",\n        \"    const currentNode = queue.shift();\",\n        \"    console.log(currentNode); // Process current node\",\n        \"    \",\n        \"    // Add all unvisited neighbors to queue\",\n        \"    for (const neighbor of graph[currentNode]) {\",\n        \"      if (!visited.has(neighbor)) {\",\n        \"        visited.add(neighbor);\",\n        \"        queue.push(neighbor);\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"}\"\n    ];\n    const dijkstraLines = [\n        \"function dijkstra(graph, start) {\",\n        \"  const distances = {};\",\n        \"  const prev = {};\",\n        \"  const pq = [];\",\n        \"  for (const node in graph) {\",\n        \"    distances[node] = Infinity;\",\n        \"    prev[node] = null;\",\n        \"  }\",\n        \"  distances[start] = 0;\",\n        \"  pq.push({ node: start, dist: 0 });\",\n        \"  \",\n        \"  while (pq.length > 0) {\",\n        \"    pq.sort((a, b) => a.dist - b.dist);\",\n        \"    const { node: current } = pq.shift();\",\n        \"    \",\n        \"    for (const neighbor of graph[current]) {\",\n        \"      const { to, weight } = neighbor;\",\n        \"      if (distances[current] + weight < distances[to]) {\",\n        \"        distances[to] = distances[current] + weight;\",\n        \"        prev[to] = current;\",\n        \"        pq.push({ node: to, dist: distances[to] });\",\n        \"      }\",\n        \"    }\",\n        \"  }\",\n        \"  return { distances, prev };\",\n        \"}\"\n    ];\n    const generateDFSSteps = (startNode)=>{\n        const adjacencyList = getAdjacencyList();\n        const steps = [];\n        const visited = new Set();\n        const order = [];\n        function dfs(nodeId) {\n            let depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n            var _adjacencyList_nodeId, _adjacencyList_nodeId1;\n            if (visited.has(nodeId)) return;\n            visited.add(nodeId);\n            order.push(nodeId);\n            steps.push({\n                line: 1,\n                nodeId,\n                visited: [\n                    ...visited\n                ],\n                order: [\n                    ...order\n                ],\n                depth,\n                desc: \"Visit node \".concat(nodeId),\n                current: nodeId,\n                neighbors: ((_adjacencyList_nodeId = adjacencyList[nodeId]) === null || _adjacencyList_nodeId === void 0 ? void 0 : _adjacencyList_nodeId.map((n)=>n.to)) || []\n            });\n            steps.push({\n                line: 2,\n                nodeId,\n                visited: [\n                    ...visited\n                ],\n                order: [\n                    ...order\n                ],\n                depth,\n                desc: \"Add \".concat(nodeId, \" to visited set\"),\n                current: nodeId,\n                neighbors: ((_adjacencyList_nodeId1 = adjacencyList[nodeId]) === null || _adjacencyList_nodeId1 === void 0 ? void 0 : _adjacencyList_nodeId1.map((n)=>n.to)) || []\n            });\n            for (const neighbor of adjacencyList[nodeId] || []){\n                if (!visited.has(neighbor.to)) {\n                    var _adjacencyList_nodeId2, _adjacencyList_nodeId3;\n                    steps.push({\n                        line: 6,\n                        nodeId,\n                        visited: [\n                            ...visited\n                        ],\n                        order: [\n                            ...order\n                        ],\n                        depth,\n                        desc: \"Check neighbor \".concat(neighbor.to, \" of \").concat(nodeId),\n                        current: nodeId,\n                        neighbors: ((_adjacencyList_nodeId2 = adjacencyList[nodeId]) === null || _adjacencyList_nodeId2 === void 0 ? void 0 : _adjacencyList_nodeId2.map((n)=>n.to)) || [],\n                        checking: neighbor.to\n                    });\n                    steps.push({\n                        line: 7,\n                        nodeId,\n                        visited: [\n                            ...visited\n                        ],\n                        order: [\n                            ...order\n                        ],\n                        depth,\n                        desc: \"Recursively visit \".concat(neighbor.to),\n                        current: nodeId,\n                        neighbors: ((_adjacencyList_nodeId3 = adjacencyList[nodeId]) === null || _adjacencyList_nodeId3 === void 0 ? void 0 : _adjacencyList_nodeId3.map((n)=>n.to)) || [],\n                        checking: neighbor.to\n                    });\n                    dfs(neighbor.to, depth + 1);\n                }\n            }\n        }\n        dfs(startNode);\n        return steps;\n    };\n    const generateBFSSteps = (startNode)=>{\n        const adjacencyList = getAdjacencyList();\n        const steps = [];\n        const visited = new Set();\n        const queue = [];\n        const order = [];\n        visited.add(startNode);\n        queue.push(startNode);\n        steps.push({\n            line: 2,\n            visited: [\n                ...visited\n            ],\n            queue: [\n                ...queue\n            ],\n            order: [\n                ...order\n            ],\n            desc: \"Initialize: visited = [\".concat(startNode, \"], queue = [\").concat(startNode, \"]\"),\n            current: null\n        });\n        while(queue.length > 0){\n            const currentNode = queue.shift();\n            order.push(currentNode);\n            steps.push({\n                line: 7,\n                visited: [\n                    ...visited\n                ],\n                queue: [\n                    ...queue\n                ],\n                order: [\n                    ...order\n                ],\n                desc: \"Dequeue and process \".concat(currentNode),\n                current: currentNode\n            });\n            steps.push({\n                line: 8,\n                visited: [\n                    ...visited\n                ],\n                queue: [\n                    ...queue\n                ],\n                order: [\n                    ...order\n                ],\n                desc: \"Add \".concat(currentNode, \" to traversal order\"),\n                current: currentNode\n            });\n            for (const neighbor of adjacencyList[currentNode] || []){\n                if (!visited.has(neighbor.to)) {\n                    visited.add(neighbor.to);\n                    queue.push(neighbor.to);\n                    steps.push({\n                        line: 12,\n                        visited: [\n                            ...visited\n                        ],\n                        queue: [\n                            ...queue\n                        ],\n                        order: [\n                            ...order\n                        ],\n                        desc: \"Add unvisited neighbor \".concat(neighbor.to, \" to queue\"),\n                        current: currentNode,\n                        checking: neighbor.to\n                    });\n                }\n            }\n        }\n        return steps;\n    };\n    const generateDijkstraSteps = (startNode, endNode)=>{\n        const adjacencyList = getAdjacencyList();\n        const steps = [];\n        const distances = {};\n        const prev = {};\n        const visited = new Set();\n        const pq = [];\n        // Initialize\n        nodes.forEach((node)=>{\n            distances[node.id] = Infinity;\n            prev[node.id] = null;\n        });\n        distances[startNode] = 0;\n        pq.push({\n            node: startNode,\n            dist: 0\n        });\n        steps.push({\n            line: 3,\n            distances: {\n                ...distances\n            },\n            prev: {\n                ...prev\n            },\n            pq: [\n                ...pq\n            ],\n            visited: [\n                ...visited\n            ],\n            desc: \"Initialize distances and priority queue\",\n            current: null\n        });\n        steps.push({\n            line: 8,\n            distances: {\n                ...distances\n            },\n            prev: {\n                ...prev\n            },\n            pq: [\n                ...pq\n            ],\n            visited: [\n                ...visited\n            ],\n            desc: \"Set distance[\".concat(startNode, \"] = 0\"),\n            current: null\n        });\n        steps.push({\n            line: 9,\n            distances: {\n                ...distances\n            },\n            prev: {\n                ...prev\n            },\n            pq: [\n                ...pq\n            ],\n            visited: [\n                ...visited\n            ],\n            desc: \"Add \".concat(startNode, \" to priority queue\"),\n            current: null\n        });\n        while(pq.length > 0){\n            pq.sort((a, b)=>a.dist - b.dist);\n            const currentItem = pq.shift();\n            const current = currentItem.node;\n            if (visited.has(current)) continue;\n            visited.add(current);\n            steps.push({\n                line: 12,\n                distances: {\n                    ...distances\n                },\n                prev: {\n                    ...prev\n                },\n                pq: [\n                    ...pq\n                ],\n                visited: [\n                    ...visited\n                ],\n                desc: \"Sort priority queue and select \".concat(current),\n                current\n            });\n            steps.push({\n                line: 13,\n                distances: {\n                    ...distances\n                },\n                prev: {\n                    ...prev\n                },\n                pq: [\n                    ...pq\n                ],\n                visited: [\n                    ...visited\n                ],\n                desc: \"Mark \".concat(current, \" as visited\"),\n                current\n            });\n            for (const neighbor of adjacencyList[current] || []){\n                const to = neighbor.to;\n                const weight = neighbor.weight;\n                const newDist = distances[current] + weight;\n                steps.push({\n                    line: 15,\n                    distances: {\n                        ...distances\n                    },\n                    prev: {\n                        ...prev\n                    },\n                    pq: [\n                        ...pq\n                    ],\n                    visited: [\n                        ...visited\n                    ],\n                    desc: \"Check neighbor \".concat(to, \" (weight: \").concat(weight, \")\"),\n                    current,\n                    checking: to,\n                    newDist\n                });\n                if (newDist < distances[to]) {\n                    distances[to] = newDist;\n                    prev[to] = current;\n                    pq.push({\n                        node: to,\n                        dist: newDist\n                    });\n                    steps.push({\n                        line: 16,\n                        distances: {\n                            ...distances\n                        },\n                        prev: {\n                            ...prev\n                        },\n                        pq: [\n                            ...pq\n                        ],\n                        visited: [\n                            ...visited\n                        ],\n                        desc: \"Update distance[\".concat(to, \"] = \").concat(newDist, \", prev[\").concat(to, \"] = \").concat(current),\n                        current,\n                        checking: to\n                    });\n                }\n            }\n        }\n        // Build shortest path\n        let path = [];\n        let curr = endNode;\n        if (distances[endNode] !== Infinity) {\n            while(curr && prev[curr]){\n                path.unshift(curr);\n                curr = prev[curr];\n            }\n            if (curr === startNode) path.unshift(startNode);\n        }\n        steps.push({\n            line: 22,\n            distances: {\n                ...distances\n            },\n            prev: {\n                ...prev\n            },\n            pq: [\n                ...pq\n            ],\n            visited: [\n                ...visited\n            ],\n            desc: \"Build shortest path: \".concat(path.join(\" → \")),\n            current: null,\n            path\n        });\n        return steps;\n    };\n    const generateBellmanFordSteps = (startNode)=>{\n        const steps = [];\n        const distances = {};\n        nodes.forEach((node)=>{\n            distances[node.id] = Infinity;\n        });\n        distances[startNode] = 0;\n        steps.push({\n            line: 2,\n            distances: {\n                ...distances\n            },\n            desc: \"Init distances, set \".concat(startNode, \"=0\")\n        });\n        for(let i = 0; i < nodes.length - 1; i++){\n            steps.push({\n                line: 6,\n                distances: {\n                    ...distances\n                },\n                desc: \"Iteration \".concat(i + 1)\n            });\n            for (const edge of edges){\n                steps.push({\n                    line: 7,\n                    distances: {\n                        ...distances\n                    },\n                    edge,\n                    desc: \"Relax edge \".concat(edge.from, \"→\").concat(edge.to, \" (w=\").concat(edge.weight, \")\")\n                });\n                if (distances[edge.from] + edge.weight < distances[edge.to]) {\n                    distances[edge.to] = distances[edge.from] + edge.weight;\n                    steps.push({\n                        line: 9,\n                        distances: {\n                            ...distances\n                        },\n                        edge,\n                        desc: \"Update: \".concat(edge.to, \" = \").concat(distances[edge.to])\n                    });\n                }\n            }\n        }\n        // Check for negative cycles\n        let hasNegative = false;\n        for (const edge of edges){\n            if (distances[edge.from] + edge.weight < distances[edge.to]) {\n                hasNegative = true;\n                steps.push({\n                    line: 14,\n                    distances: {\n                        ...distances\n                    },\n                    edge,\n                    desc: \"Negative cycle detected at \".concat(edge.from, \"→\").concat(edge.to)\n                });\n                break;\n            }\n        }\n        if (!hasNegative) {\n            steps.push({\n                line: 17,\n                distances: {\n                    ...distances\n                },\n                desc: \"Done\"\n            });\n        }\n        return steps;\n    };\n    const generateGreedySteps = (startNode, endNode)=>{\n        var _steps_;\n        const adjacencyList = getAdjacencyList();\n        const steps = [];\n        const visited = new Set();\n        const pq = [\n            {\n                node: startNode,\n                h: 0\n            }\n        ];\n        steps.push({\n            line: 2,\n            pq: [\n                ...pq\n            ],\n            visited: [\n                ...visited\n            ],\n            desc: \"Init PQ with \".concat(startNode)\n        });\n        while(pq.length > 0){\n            pq.sort((a, b)=>a.h - b.h);\n            const { node } = pq.shift();\n            steps.push({\n                line: 4,\n                pq: [\n                    ...pq\n                ],\n                visited: [\n                    ...visited\n                ],\n                current: node,\n                desc: \"Select node \".concat(node)\n            });\n            if (node === endNode) {\n                steps.push({\n                    line: 6,\n                    pq: [\n                        ...pq\n                    ],\n                    visited: [\n                        ...visited\n                    ],\n                    current: node,\n                    desc: \"Found goal \".concat(node)\n                });\n                break;\n            }\n            visited.add(node);\n            for (const neighbor of adjacencyList[node] || []){\n                if (!visited.has(neighbor.to)) {\n                    pq.push({\n                        node: neighbor.to,\n                        h: 0\n                    });\n                    steps.push({\n                        line: 11,\n                        pq: [\n                            ...pq\n                        ],\n                        visited: [\n                            ...visited\n                        ],\n                        current: node,\n                        desc: \"Push neighbor \".concat(neighbor.to)\n                    });\n                }\n            }\n        }\n        if (((_steps_ = steps[steps.length - 1]) === null || _steps_ === void 0 ? void 0 : _steps_.current) !== endNode) {\n            steps.push({\n                line: 14,\n                pq: [\n                    ...pq\n                ],\n                visited: [\n                    ...visited\n                ],\n                desc: \"Goal not found\"\n            });\n        }\n        return steps;\n    };\n    const reset = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n        setNodes(nodes.map((node)=>({\n                ...node,\n                visited: false,\n                current: false\n            })));\n        setShortestPath([]);\n        setDistances({});\n        setTraversalOrder([]);\n        setSteps([]);\n        setCurrentStepIdx(0);\n        setIsAutoPlaying(false);\n    };\n    // DFS Traversal with output\n    const dfsTraversal = async function(nodeId, visited, adjacencyList) {\n        let order = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];\n        if (!isPlayingRef.current || visited.has(nodeId)) return;\n        visited.add(nodeId);\n        order.push(nodeId);\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: node.id === nodeId,\n                    visited: visited.has(node.id)\n                })));\n        setTraversalOrder([\n            ...order\n        ]);\n        await sleep(1200);\n        if (!isPlayingRef.current) return;\n        for (const neighbor of adjacencyList[nodeId]){\n            if (!visited.has(neighbor.to) && isPlayingRef.current) {\n                await dfsTraversal(neighbor.to, visited, adjacencyList, order);\n            }\n        }\n        if (isPlayingRef.current) {\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: false\n                    })));\n        }\n    };\n    // BFS Traversal with output\n    const bfsTraversal = async ()=>{\n        const adjacencyList = getAdjacencyList();\n        const visited = new Set();\n        const queue = [\n            startNode\n        ];\n        const order = [];\n        visited.add(startNode);\n        while(queue.length > 0 && isPlayingRef.current){\n            const currentNode = queue.shift();\n            order.push(currentNode);\n            setNodes((prev)=>prev.map((node)=>({\n                        ...node,\n                        current: node.id === currentNode,\n                        visited: visited.has(node.id)\n                    })));\n            setTraversalOrder([\n                ...order\n            ]);\n            await sleep(1200);\n            for (const neighbor of adjacencyList[currentNode]){\n                if (!visited.has(neighbor.to)) {\n                    visited.add(neighbor.to);\n                    queue.push(neighbor.to);\n                }\n            }\n        }\n        setNodes((prev)=>prev.map((node)=>({\n                    ...node,\n                    current: false\n                })));\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    // Dijkstra visualization logic\n    const dijkstraTraversal = async ()=>{\n        const adjacencyList = getAdjacencyList();\n        const distances = {};\n        const prev = {};\n        const visited = new Set();\n        const pq = [];\n        nodes.forEach((node)=>{\n            distances[node.id] = Infinity;\n            prev[node.id] = null;\n        });\n        distances[startNode] = 0;\n        pq.push({\n            node: startNode,\n            dist: 0\n        });\n        while(pq.length > 0 && isPlayingRef.current){\n            pq.sort((a, b)=>a.dist - b.dist);\n            const { node: current } = pq.shift();\n            if (visited.has(current)) continue;\n            visited.add(current);\n            setNodes((prevNodes)=>prevNodes.map((n)=>({\n                        ...n,\n                        current: n.id === current,\n                        visited: visited.has(n.id)\n                    })));\n            await sleep(1200);\n            for (const neighbor of adjacencyList[current]){\n                const { to, weight } = neighbor;\n                if (distances[current] + weight < distances[to]) {\n                    distances[to] = distances[current] + weight;\n                    prev[to] = current;\n                    pq.push({\n                        node: to,\n                        dist: distances[to]\n                    });\n                }\n            }\n        }\n        // Build shortest path from startNode to endNode\n        let path = [];\n        let curr = endNode;\n        if (distances[endNode] !== Infinity) {\n            while(curr && prev[curr]){\n                path.unshift(curr);\n                curr = prev[curr];\n            }\n            if (curr === startNode) path.unshift(startNode);\n        }\n        setShortestPath(path);\n        setDistances({\n            ...distances\n        });\n        setNodes((prevNodes)=>prevNodes.map((n)=>({\n                    ...n,\n                    current: false,\n                    visited: visited.has(n.id) || path.includes(n.id)\n                })));\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    const play = async ()=>{\n        if (isPlaying) return;\n        setIsPlaying(true);\n        isPlayingRef.current = true;\n        reset();\n        await sleep(100);\n        isPlayingRef.current = true;\n        let steps = [];\n        if (selectedAlgorithm === \"dfs\") {\n            steps = generateDFSSteps(startNode);\n        } else if (selectedAlgorithm === \"bfs\") {\n            steps = generateBFSSteps(startNode);\n        } else if (selectedAlgorithm === \"dijkstra\") {\n            steps = generateDijkstraSteps(startNode, endNode);\n        } else if (selectedAlgorithm === \"bellman\") {\n            steps = generateBellmanFordSteps(startNode);\n        } else if (selectedAlgorithm === \"greedy\") {\n            steps = generateGreedySteps(startNode, endNode);\n        }\n        setSteps(steps);\n        setCurrentStepIdx(0);\n        setIsAutoPlaying(true);\n    };\n    const pause = ()=>{\n        setIsPlaying(false);\n        isPlayingRef.current = false;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        reset();\n    }, [\n        selectedAlgorithm\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        isPlayingRef.current = isPlaying;\n    }, [\n        isPlaying\n    ]);\n    // Stepper controls for Graph Algorithms\n    const handleStepPrev = ()=>{\n        setCurrentStepIdx((idx)=>Math.max(0, idx - 1));\n        setIsAutoPlaying(false);\n        setIsPlaying(false);\n    };\n    const handleStepNext = ()=>{\n        setCurrentStepIdx((idx)=>Math.min(steps.length - 1, idx + 1));\n        setIsAutoPlaying(false);\n        setIsPlaying(false);\n    };\n    // Auto play effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isAutoPlaying || steps.length === 0) return;\n        if (currentStepIdx >= steps.length - 1) {\n            setIsAutoPlaying(false);\n            setIsPlaying(false);\n            return;\n        }\n        const timer = setTimeout(()=>{\n            setCurrentStepIdx((idx)=>Math.min(steps.length - 1, idx + 1));\n        }, 1200);\n        return ()=>clearTimeout(timer);\n    }, [\n        isAutoPlaying,\n        currentStepIdx,\n        steps.length\n    ]);\n    // Đồng bộ output với bước stepper\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (steps.length === 0) return;\n        if (selectedAlgorithm === \"dfs\" || selectedAlgorithm === \"bfs\") {\n            var _steps_currentStepIdx;\n            setTraversalOrder(((_steps_currentStepIdx = steps[currentStepIdx]) === null || _steps_currentStepIdx === void 0 ? void 0 : _steps_currentStepIdx.order) || []);\n        } else if (selectedAlgorithm === \"dijkstra\") {\n            var _steps_currentStepIdx1, _steps_currentStepIdx2;\n            setDistances(((_steps_currentStepIdx1 = steps[currentStepIdx]) === null || _steps_currentStepIdx1 === void 0 ? void 0 : _steps_currentStepIdx1.distances) || {});\n            // Tính shortestPath tại mỗi bước nếu có prev\n            const prev = (_steps_currentStepIdx2 = steps[currentStepIdx]) === null || _steps_currentStepIdx2 === void 0 ? void 0 : _steps_currentStepIdx2.prev;\n            if (prev) {\n                let path = [];\n                let curr = endNode;\n                while(curr && prev[curr]){\n                    path.unshift(curr);\n                    curr = prev[curr];\n                }\n                if (curr === startNode) path.unshift(startNode);\n                setShortestPath(path);\n            } else {\n                setShortestPath([]);\n            }\n        } else if (selectedAlgorithm === \"bellman\") {\n            var _steps_currentStepIdx3, _steps_currentStepIdx4;\n            setDistances(((_steps_currentStepIdx3 = steps[currentStepIdx]) === null || _steps_currentStepIdx3 === void 0 ? void 0 : _steps_currentStepIdx3.distances) || {});\n            // Tính shortestPath tại mỗi bước nếu có prev\n            const prev = (_steps_currentStepIdx4 = steps[currentStepIdx]) === null || _steps_currentStepIdx4 === void 0 ? void 0 : _steps_currentStepIdx4.prev;\n            if (prev) {\n                let path = [];\n                let curr = endNode;\n                while(curr && prev[curr]){\n                    path.unshift(curr);\n                    curr = prev[curr];\n                }\n                if (curr === startNode) path.unshift(startNode);\n                setShortestPath(path);\n            } else {\n                setShortestPath([]);\n            }\n        } else if (selectedAlgorithm === \"greedy\") {\n            var _steps_currentStepIdx5;\n            setTraversalOrder(((_steps_currentStepIdx5 = steps[currentStepIdx]) === null || _steps_currentStepIdx5 === void 0 ? void 0 : _steps_currentStepIdx5.order) || []);\n            setShortestPath([]); // Greedy doesn't have a direct shortest path like Dijkstra\n        }\n    }, [\n        currentStepIdx,\n        steps,\n        selectedAlgorithm,\n        startNode,\n        endNode\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlgorithmSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                algorithms: algorithms,\n                selectedAlgorithm: selectedAlgorithm,\n                setSelectedAlgorithm: setSelectedAlgorithm\n            }, void 0, false, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 858,\n                columnNumber: 7\n            }, this),\n            (selectedAlgorithm === \"dijkstra\" || selectedAlgorithm === \"bfs\" || selectedAlgorithm === \"dfs\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-wrap gap-4 items-center bg-gray-700 p-4 rounded-lg\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"text-gray-200 mr-2\",\n                                children: \"Start Node:\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 867,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                title: \"Start Node\",\n                                className: \"bg-gray-800 text-white px-2 py-1 rounded border border-gray-600 focus:border-purple-500 outline-none\",\n                                value: startNode,\n                                onChange: (e)=>setStartNode(e.target.value),\n                                children: nodeIds.map((id)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: id,\n                                        children: id\n                                    }, id, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 875,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 868,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 866,\n                        columnNumber: 11\n                    }, this),\n                    selectedAlgorithm === \"dijkstra\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"text-gray-200 mr-2\",\n                                children: \"End Node:\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 881,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                title: \"End Node\",\n                                className: \"bg-gray-800 text-white px-2 py-1 rounded border border-gray-600 focus:border-purple-500 outline-none\",\n                                value: endNode,\n                                onChange: (e)=>setEndNode(e.target.value),\n                                children: nodeIds.map((id)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: id,\n                                        children: id\n                                    }, id, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 889,\n                                        columnNumber: 19\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 882,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 880,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 865,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid lg:grid-cols-2 gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GraphVisualization__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                nodes: steps.length > 0 ? nodes.map((node)=>{\n                                    var _steps_currentStepIdx_visited, _steps_currentStepIdx, _steps_currentStepIdx1;\n                                    return {\n                                        ...node,\n                                        visited: ((_steps_currentStepIdx = steps[currentStepIdx]) === null || _steps_currentStepIdx === void 0 ? void 0 : (_steps_currentStepIdx_visited = _steps_currentStepIdx.visited) === null || _steps_currentStepIdx_visited === void 0 ? void 0 : _steps_currentStepIdx_visited.includes(node.id)) || false,\n                                        current: node.id === ((_steps_currentStepIdx1 = steps[currentStepIdx]) === null || _steps_currentStepIdx1 === void 0 ? void 0 : _steps_currentStepIdx1.current)\n                                    };\n                                }) : nodes,\n                                edges: edges,\n                                highlightPath: selectedAlgorithm === \"dijkstra\" ? shortestPath : traversalOrder,\n                                showWeights: true\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 898,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ControlPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                isPlaying: isPlaying,\n                                onPlay: play,\n                                onPause: pause,\n                                onReset: reset,\n                                hideGenerateArray: true\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 908,\n                                columnNumber: 11\n                            }, this),\n                            steps.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-center space-x-2 mt-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleStepPrev,\n                                        disabled: currentStepIdx === 0,\n                                        className: \"px-2 py-1 bg-gray-600 rounded text-white\",\n                                        children: \"Prev\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 918,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-200\",\n                                        children: [\n                                            \"Step \",\n                                            currentStepIdx + 1,\n                                            \" / \",\n                                            steps.length\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 919,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleStepNext,\n                                        disabled: currentStepIdx === steps.length - 1,\n                                        className: \"px-2 py-1 bg-gray-600 rounded text-white\",\n                                        children: \"Next\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 920,\n                                        columnNumber: 15\n                                    }, this),\n                                    !isAutoPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>setIsAutoPlaying(true),\n                                        disabled: currentStepIdx === steps.length - 1,\n                                        className: \"px-2 py-1 bg-green-600 rounded text-white\",\n                                        children: \"Auto\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 922,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>setIsAutoPlaying(false),\n                                        className: \"px-2 py-1 bg-orange-600 rounded text-white\",\n                                        children: \"Pause\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 924,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 917,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 897,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-4\",\n                        children: [\n                            steps.length > 0 ? selectedAlgorithm === \"dfs\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: dfsLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 936,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 934,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 941,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"Current: \",\n                                            steps[currentStepIdx].current || \"-\",\n                                            \", Visited: [\",\n                                            ((_steps_currentStepIdx_visited = steps[currentStepIdx].visited) === null || _steps_currentStepIdx_visited === void 0 ? void 0 : _steps_currentStepIdx_visited.join(\", \")) || \"\",\n                                            \"], Order: [\",\n                                            ((_steps_currentStepIdx_order = steps[currentStepIdx].order) === null || _steps_currentStepIdx_order === void 0 ? void 0 : _steps_currentStepIdx_order.join(\", \")) || \"\",\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 942,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 933,\n                                columnNumber: 15\n                            }, this) : selectedAlgorithm === \"bfs\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: bfsLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 948,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 946,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 953,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"Current: \",\n                                            steps[currentStepIdx].current || \"-\",\n                                            \", Queue: [\",\n                                            ((_steps_currentStepIdx_queue = steps[currentStepIdx].queue) === null || _steps_currentStepIdx_queue === void 0 ? void 0 : _steps_currentStepIdx_queue.join(\", \")) || \"\",\n                                            \"], Visited: [\",\n                                            ((_steps_currentStepIdx_visited1 = steps[currentStepIdx].visited) === null || _steps_currentStepIdx_visited1 === void 0 ? void 0 : _steps_currentStepIdx_visited1.join(\", \")) || \"\",\n                                            \"], Order: [\",\n                                            ((_steps_currentStepIdx_order1 = steps[currentStepIdx].order) === null || _steps_currentStepIdx_order1 === void 0 ? void 0 : _steps_currentStepIdx_order1.join(\", \")) || \"\",\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 954,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 945,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-sm font-mono\",\n                                        children: dijkstraLines.map((line, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    background: idx === steps[currentStepIdx].line ? \"#fbbf24\" : \"transparent\",\n                                                    color: idx === steps[currentStepIdx].line ? \"#222\" : \"#fff\",\n                                                    fontWeight: idx === steps[currentStepIdx].line ? \"bold\" : \"normal\",\n                                                    padding: \"2px 0\"\n                                                },\n                                                children: line\n                                            }, idx, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 960,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 958,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-200 text-xs\",\n                                        children: steps[currentStepIdx].desc\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 965,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2 text-gray-300 text-xs\",\n                                        children: [\n                                            \"Current: \",\n                                            steps[currentStepIdx].current || \"-\",\n                                            \", Checking: \",\n                                            steps[currentStepIdx].checking || \"-\",\n                                            \", PQ: [\",\n                                            ((_steps_currentStepIdx_pq = steps[currentStepIdx].pq) === null || _steps_currentStepIdx_pq === void 0 ? void 0 : _steps_currentStepIdx_pq.map((p)=>\"\".concat(p.node, \"(\").concat(p.dist, \")\")).join(\", \")) || \"\",\n                                            \"]\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 966,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 957,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CodeDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                code: getAlgorithmCode(),\n                                language: \"javascript\",\n                                title: ((_algorithms_find = algorithms.find((a)=>a.id === selectedAlgorithm)) === null || _algorithms_find === void 0 ? void 0 : _algorithms_find.name) || \"\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 970,\n                                columnNumber: 13\n                            }, this),\n                            selectedAlgorithm === \"dijkstra\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-700 rounded-lg p-4 text-gray-100\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg mb-2\",\n                                        children: \"Dijkstra Output\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 979,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Shortest path from \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: startNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 980,\n                                                columnNumber: 56\n                                            }, this),\n                                            \" to \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: endNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 980,\n                                                columnNumber: 78\n                                            }, this),\n                                            \":\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 980,\n                                        columnNumber: 15\n                                    }, this),\n                                    shortestPath.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-yellow-400\",\n                                        children: \"Finding path...\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 982,\n                                        columnNumber: 17\n                                    }, this) : shortestPath.length > 1 && distances[endNode] !== undefined && distances[endNode] !== Infinity ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-green-400 font-semibold\",\n                                        children: shortestPath.join(\" → \")\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 984,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-red-400\",\n                                        children: \"No path found.\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 986,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Distance from \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: startNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 988,\n                                                columnNumber: 51\n                                            }, this),\n                                            \" to \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: endNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 988,\n                                                columnNumber: 73\n                                            }, this),\n                                            \": \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"font-semibold\",\n                                                children: distances[endNode] !== undefined && distances[endNode] !== Infinity ? distances[endNode] : shortestPath.length === 0 ? \"...\" : \"∞\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 988,\n                                                columnNumber: 91\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 988,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mt-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: [\n                                                    \"All distances from \",\n                                                    startNode,\n                                                    \":\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 990,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                className: \"list-disc ml-6\",\n                                                children: Object.entries(distances).map((param)=>{\n                                                    let [k, v] = param;\n                                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                        children: [\n                                                            k,\n                                                            \": \",\n                                                            v !== Infinity ? v : \"∞\"\n                                                        ]\n                                                    }, k, true, {\n                                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                        lineNumber: 993,\n                                                        columnNumber: 21\n                                                    }, this);\n                                                })\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 991,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 989,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 978,\n                                columnNumber: 13\n                            }, this),\n                            (selectedAlgorithm === \"bfs\" || selectedAlgorithm === \"dfs\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-700 rounded-lg p-4 text-gray-100\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg mb-2\",\n                                        children: [\n                                            selectedAlgorithm === \"bfs\" ? \"BFS\" : \"DFS\",\n                                            \" Output\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1002,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Traversal order starting from \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: startNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1003,\n                                                columnNumber: 67\n                                            }, this),\n                                            \":\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1003,\n                                        columnNumber: 15\n                                    }, this),\n                                    traversalOrder.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-green-400 font-semibold\",\n                                        children: traversalOrder.join(\" → \")\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1005,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-red-400\",\n                                        children: \"No traversal yet.\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1007,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 1001,\n                                columnNumber: 13\n                            }, this),\n                            selectedAlgorithm === \"bellman\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-700 rounded-lg p-4 text-gray-100\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg mb-2\",\n                                        children: \"Bellman-Ford Output\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1014,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Distances from \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                children: startNode\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1015,\n                                                columnNumber: 52\n                                            }, this),\n                                            \":\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1015,\n                                        columnNumber: 15\n                                    }, this),\n                                    ((_steps_currentStepIdx = steps[currentStepIdx]) === null || _steps_currentStepIdx === void 0 ? void 0 : (_steps_currentStepIdx_desc = _steps_currentStepIdx.desc) === null || _steps_currentStepIdx_desc === void 0 ? void 0 : _steps_currentStepIdx_desc.includes(\"Negative cycle\")) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-red-400 font-semibold\",\n                                        children: \"Negative cycle detected!\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1017,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                        className: \"list-disc ml-6\",\n                                        children: Object.entries(((_steps_currentStepIdx1 = steps[currentStepIdx]) === null || _steps_currentStepIdx1 === void 0 ? void 0 : _steps_currentStepIdx1.distances) || {}).map((param)=>{\n                                            let [k, v] = param;\n                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    k,\n                                                    \": \",\n                                                    v !== Infinity ? v : \"∞\"\n                                                ]\n                                            }, k, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1021,\n                                                columnNumber: 21\n                                            }, this);\n                                        })\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1019,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 1013,\n                                columnNumber: 13\n                            }, this),\n                            selectedAlgorithm === \"greedy\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-700 rounded-lg p-4 text-gray-100\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-bold text-lg mb-2\",\n                                        children: \"Greedy Best-First Output\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1030,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Visited: \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-blue-300\",\n                                                children: [\n                                                    \"[\",\n                                                    ((_steps_currentStepIdx2 = steps[currentStepIdx]) === null || _steps_currentStepIdx2 === void 0 ? void 0 : (_steps_currentStepIdx_visited2 = _steps_currentStepIdx2.visited) === null || _steps_currentStepIdx_visited2 === void 0 ? void 0 : _steps_currentStepIdx_visited2.join(\", \")) || \"\",\n                                                    \"]\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1031,\n                                                columnNumber: 46\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1031,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"PQ: \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-yellow-300\",\n                                                children: [\n                                                    \"[\",\n                                                    ((_steps_currentStepIdx3 = steps[currentStepIdx]) === null || _steps_currentStepIdx3 === void 0 ? void 0 : (_steps_currentStepIdx_pq1 = _steps_currentStepIdx3.pq) === null || _steps_currentStepIdx_pq1 === void 0 ? void 0 : _steps_currentStepIdx_pq1.map((p)=>p.node).join(\", \")) || \"\",\n                                                    \"]\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1032,\n                                                columnNumber: 41\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1032,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2\",\n                                        children: [\n                                            \"Current: \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-green-400 font-semibold\",\n                                                children: ((_steps_currentStepIdx4 = steps[currentStepIdx]) === null || _steps_currentStepIdx4 === void 0 ? void 0 : _steps_currentStepIdx4.current) || \"-\"\n                                            }, void 0, false, {\n                                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                                lineNumber: 1033,\n                                                columnNumber: 46\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1033,\n                                        columnNumber: 15\n                                    }, this),\n                                    ((_steps_currentStepIdx5 = steps[currentStepIdx]) === null || _steps_currentStepIdx5 === void 0 ? void 0 : (_steps_currentStepIdx_desc1 = _steps_currentStepIdx5.desc) === null || _steps_currentStepIdx_desc1 === void 0 ? void 0 : _steps_currentStepIdx_desc1.includes(\"Goal not found\")) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-red-400 font-semibold\",\n                                        children: \"Goal not found!\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1035,\n                                        columnNumber: 17\n                                    }, this),\n                                    ((_steps_currentStepIdx6 = steps[currentStepIdx]) === null || _steps_currentStepIdx6 === void 0 ? void 0 : (_steps_currentStepIdx_desc2 = _steps_currentStepIdx6.desc) === null || _steps_currentStepIdx_desc2 === void 0 ? void 0 : _steps_currentStepIdx_desc2.includes(\"Found goal\")) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-2 text-green-400 font-semibold\",\n                                        children: \"Found goal!\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                        lineNumber: 1038,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                                lineNumber: 1029,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                        lineNumber: 929,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n                lineNumber: 896,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\webdoan\\\\CTDT-GT\\\\components\\\\algorithms\\\\GraphAlgorithms.tsx\",\n        lineNumber: 857,\n        columnNumber: 5\n    }, this);\n}\n_s(GraphAlgorithms, \"3iWZUisATzKYWBHXHboQ8HMPeZU=\");\n_c = GraphAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"GraphAlgorithms\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/algorithms/GraphAlgorithms.tsx\n"));

/***/ })

});